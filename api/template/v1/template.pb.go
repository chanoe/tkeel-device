// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/template/v1/template.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//basic
type TemplateBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	CustomId    string `protobuf:"bytes,2,opt,name=customId,proto3" json:"customId"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description"`
}

func (x *TemplateBasicInfo) Reset() {
	*x = TemplateBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateBasicInfo) ProtoMessage() {}

func (x *TemplateBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateBasicInfo.ProtoReflect.Descriptor instead.
func (*TemplateBasicInfo) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{0}
}

func (x *TemplateBasicInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TemplateBasicInfo) GetCustomId() string {
	if x != nil {
		return x.CustomId
	}
	return ""
}

func (x *TemplateBasicInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type PropConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Id          string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	Type        string          `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
	Define      *structpb.Value `protobuf:"bytes,4,opt,name=define,proto3" json:"define"`
	Description string          `protobuf:"bytes,5,opt,name=description,proto3" json:"description"`
}

func (x *PropConfig) Reset() {
	*x = PropConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropConfig) ProtoMessage() {}

func (x *PropConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropConfig.ProtoReflect.Descriptor instead.
func (*PropConfig) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{1}
}

func (x *PropConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PropConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PropConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PropConfig) GetDefine() *structpb.Value {
	if x != nil {
		return x.Define
	}
	return nil
}

func (x *PropConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Ids struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids"`
}

func (x *Ids) Reset() {
	*x = Ids{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ids) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ids) ProtoMessage() {}

func (x *Ids) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ids.ProtoReflect.Descriptor instead.
func (*Ids) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{2}
}

func (x *Ids) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Keys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys"`
}

func (x *Keys) Reset() {
	*x = Keys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keys) ProtoMessage() {}

func (x *Keys) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keys.ProtoReflect.Descriptor instead.
func (*Keys) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{3}
}

func (x *Keys) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

//template obj
type CreateTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicInfo *TemplateBasicInfo `protobuf:"bytes,1,opt,name=basicInfo,proto3" json:"basicInfo"`
}

func (x *CreateTemplateRequest) Reset() {
	*x = CreateTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateRequest) ProtoMessage() {}

func (x *CreateTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTemplateRequest) GetBasicInfo() *TemplateBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

type CreateTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//api.core.v1.EntityResponse templateObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "模板对象"}];
	TemplateObject *structpb.Value `protobuf:"bytes,1,opt,name=templateObject,proto3" json:"templateObject"`
}

func (x *CreateTemplateResponse) Reset() {
	*x = CreateTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateResponse) ProtoMessage() {}

func (x *CreateTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTemplateResponse) GetTemplateObject() *structpb.Value {
	if x != nil {
		return x.TemplateObject
	}
	return nil
}

type UpdateTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicInfo *TemplateBasicInfo `protobuf:"bytes,1,opt,name=basicInfo,proto3" json:"basicInfo"`
	Uid       string             `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid"`
}

func (x *UpdateTemplateRequest) Reset() {
	*x = UpdateTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateRequest) ProtoMessage() {}

func (x *UpdateTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTemplateRequest) GetBasicInfo() *TemplateBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *UpdateTemplateRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type UpdateTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//api.core.v1.EntityResponse templateObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "模板对象"}];
	TemplateObject *structpb.Value `protobuf:"bytes,1,opt,name=templateObject,proto3" json:"templateObject"`
}

func (x *UpdateTemplateResponse) Reset() {
	*x = UpdateTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateResponse) ProtoMessage() {}

func (x *UpdateTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateTemplateResponse) GetTemplateObject() *structpb.Value {
	if x != nil {
		return x.TemplateObject
	}
	return nil
}

type DeleteTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids *Ids `protobuf:"bytes,2,opt,name=ids,proto3" json:"ids"`
}

func (x *DeleteTemplateRequest) Reset() {
	*x = DeleteTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemplateRequest) ProtoMessage() {}

func (x *DeleteTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTemplateRequest) GetIds() *Ids {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaildDelTemplate []*FaildDelTemplate `protobuf:"bytes,1,rep,name=faildDelTemplate,proto3" json:"faildDelTemplate"`
}

func (x *DeleteTemplateResponse) Reset() {
	*x = DeleteTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemplateResponse) ProtoMessage() {}

func (x *DeleteTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeleteTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteTemplateResponse) GetFaildDelTemplate() []*FaildDelTemplate {
	if x != nil {
		return x.FaildDelTemplate
	}
	return nil
}

type FaildDelTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason"`
}

func (x *FaildDelTemplate) Reset() {
	*x = FaildDelTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaildDelTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaildDelTemplate) ProtoMessage() {}

func (x *FaildDelTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaildDelTemplate.ProtoReflect.Descriptor instead.
func (*FaildDelTemplate) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{10}
}

func (x *FaildDelTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FaildDelTemplate) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type GetTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
}

func (x *GetTemplateRequest) Reset() {
	*x = GetTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateRequest) ProtoMessage() {}

func (x *GetTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{11}
}

func (x *GetTemplateRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateObject *structpb.Value `protobuf:"bytes,1,opt,name=templateObject,proto3" json:"templateObject"` //api.core.v1.EntityResponse templateObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "模板对象"}];
}

func (x *GetTemplateResponse) Reset() {
	*x = GetTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateResponse) ProtoMessage() {}

func (x *GetTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{12}
}

func (x *GetTemplateResponse) GetTemplateObject() *structpb.Value {
	if x != nil {
		return x.TemplateObject
	}
	return nil
}

//attribute
type AddTemplateAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//PropConfig attr  = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "属性对象"}];
	Attr *structpb.Value `protobuf:"bytes,2,opt,name=attr,proto3" json:"attr"`
	Uid  string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
}

func (x *AddTemplateAttributeRequest) Reset() {
	*x = AddTemplateAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTemplateAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTemplateAttributeRequest) ProtoMessage() {}

func (x *AddTemplateAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTemplateAttributeRequest.ProtoReflect.Descriptor instead.
func (*AddTemplateAttributeRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{13}
}

func (x *AddTemplateAttributeRequest) GetAttr() *structpb.Value {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *AddTemplateAttributeRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type UpdateTemplateAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//PropConfig attr  = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "属性对象"}];
	Attr *structpb.Value `protobuf:"bytes,2,opt,name=attr,proto3" json:"attr"`
	Uid  string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
}

func (x *UpdateTemplateAttributeRequest) Reset() {
	*x = UpdateTemplateAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplateAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateAttributeRequest) ProtoMessage() {}

func (x *UpdateTemplateAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateAttributeRequest.ProtoReflect.Descriptor instead.
func (*UpdateTemplateAttributeRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateTemplateAttributeRequest) GetAttr() *structpb.Value {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *UpdateTemplateAttributeRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type DeleteTemplateAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
	Ids *Ids   `protobuf:"bytes,2,opt,name=ids,proto3" json:"ids"`
}

func (x *DeleteTemplateAttributeRequest) Reset() {
	*x = DeleteTemplateAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemplateAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemplateAttributeRequest) ProtoMessage() {}

func (x *DeleteTemplateAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemplateAttributeRequest.ProtoReflect.Descriptor instead.
func (*DeleteTemplateAttributeRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteTemplateAttributeRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DeleteTemplateAttributeRequest) GetIds() *Ids {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetTemplateAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
	Id  string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
}

func (x *GetTemplateAttributeRequest) Reset() {
	*x = GetTemplateAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateAttributeRequest) ProtoMessage() {}

func (x *GetTemplateAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetTemplateAttributeRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{16}
}

func (x *GetTemplateAttributeRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetTemplateAttributeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTemplateAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//api.core.v1.EntityResponse templateAttrSingleObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "单个属性对象"}];
	TemplateAttrSingleObject *structpb.Value `protobuf:"bytes,1,opt,name=templateAttrSingleObject,proto3" json:"templateAttrSingleObject"`
}

func (x *GetTemplateAttributeResponse) Reset() {
	*x = GetTemplateAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateAttributeResponse) ProtoMessage() {}

func (x *GetTemplateAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetTemplateAttributeResponse) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{17}
}

func (x *GetTemplateAttributeResponse) GetTemplateAttrSingleObject() *structpb.Value {
	if x != nil {
		return x.TemplateAttrSingleObject
	}
	return nil
}

type ListTemplateAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
}

func (x *ListTemplateAttributeRequest) Reset() {
	*x = ListTemplateAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplateAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateAttributeRequest) ProtoMessage() {}

func (x *ListTemplateAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateAttributeRequest.ProtoReflect.Descriptor instead.
func (*ListTemplateAttributeRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{18}
}

func (x *ListTemplateAttributeRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type ListTemplateAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//repeated Attribute attributes = 3;
	//api.core.v1.EntityResponse templateAttrObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "属性列表对象"}];
	TemplateAttrObject *structpb.Value `protobuf:"bytes,1,opt,name=templateAttrObject,proto3" json:"templateAttrObject"`
}

func (x *ListTemplateAttributeResponse) Reset() {
	*x = ListTemplateAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplateAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateAttributeResponse) ProtoMessage() {}

func (x *ListTemplateAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateAttributeResponse.ProtoReflect.Descriptor instead.
func (*ListTemplateAttributeResponse) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{19}
}

func (x *ListTemplateAttributeResponse) GetTemplateAttrObject() *structpb.Value {
	if x != nil {
		return x.TemplateAttrObject
	}
	return nil
}

//telemetry
type AddTemplateTelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//PropConfig tele  = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "遥测"}];
	Tele *structpb.Value `protobuf:"bytes,2,opt,name=tele,proto3" json:"tele"`
	Uid  string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
}

func (x *AddTemplateTelemetryRequest) Reset() {
	*x = AddTemplateTelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTemplateTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTemplateTelemetryRequest) ProtoMessage() {}

func (x *AddTemplateTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTemplateTelemetryRequest.ProtoReflect.Descriptor instead.
func (*AddTemplateTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{20}
}

func (x *AddTemplateTelemetryRequest) GetTele() *structpb.Value {
	if x != nil {
		return x.Tele
	}
	return nil
}

func (x *AddTemplateTelemetryRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type UpdateTemplateTelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//PropConfig tele  = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "遥测"}];
	Tele *structpb.Value `protobuf:"bytes,2,opt,name=tele,proto3" json:"tele"`
	Uid  string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
}

func (x *UpdateTemplateTelemetryRequest) Reset() {
	*x = UpdateTemplateTelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplateTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateTelemetryRequest) ProtoMessage() {}

func (x *UpdateTemplateTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateTelemetryRequest.ProtoReflect.Descriptor instead.
func (*UpdateTemplateTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateTemplateTelemetryRequest) GetTele() *structpb.Value {
	if x != nil {
		return x.Tele
	}
	return nil
}

func (x *UpdateTemplateTelemetryRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type DeleteTemplateTelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
	Ids *Ids   `protobuf:"bytes,2,opt,name=ids,proto3" json:"ids"`
}

func (x *DeleteTemplateTelemetryRequest) Reset() {
	*x = DeleteTemplateTelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemplateTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemplateTelemetryRequest) ProtoMessage() {}

func (x *DeleteTemplateTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemplateTelemetryRequest.ProtoReflect.Descriptor instead.
func (*DeleteTemplateTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteTemplateTelemetryRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DeleteTemplateTelemetryRequest) GetIds() *Ids {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetTemplateTelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
	Id  string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
}

func (x *GetTemplateTelemetryRequest) Reset() {
	*x = GetTemplateTelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateTelemetryRequest) ProtoMessage() {}

func (x *GetTemplateTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateTelemetryRequest.ProtoReflect.Descriptor instead.
func (*GetTemplateTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{23}
}

func (x *GetTemplateTelemetryRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetTemplateTelemetryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTemplateTelemetryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//api.core.v1.EntityResponse templateTeleSingleObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "单个遥测对象"}];
	TemplateTeleSingleObject *structpb.Value `protobuf:"bytes,1,opt,name=templateTeleSingleObject,proto3" json:"templateTeleSingleObject"`
}

func (x *GetTemplateTelemetryResponse) Reset() {
	*x = GetTemplateTelemetryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateTelemetryResponse) ProtoMessage() {}

func (x *GetTemplateTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateTelemetryResponse.ProtoReflect.Descriptor instead.
func (*GetTemplateTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{24}
}

func (x *GetTemplateTelemetryResponse) GetTemplateTeleSingleObject() *structpb.Value {
	if x != nil {
		return x.TemplateTeleSingleObject
	}
	return nil
}

type ListTemplateTelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
}

func (x *ListTemplateTelemetryRequest) Reset() {
	*x = ListTemplateTelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplateTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateTelemetryRequest) ProtoMessage() {}

func (x *ListTemplateTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateTelemetryRequest.ProtoReflect.Descriptor instead.
func (*ListTemplateTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{25}
}

func (x *ListTemplateTelemetryRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type ListTemplateTelemetryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//api.core.v1.EntityResponse templateTeleObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "遥测列表对象"}];
	TemplateTeleObject *structpb.Value `protobuf:"bytes,1,opt,name=templateTeleObject,proto3" json:"templateTeleObject"`
}

func (x *ListTemplateTelemetryResponse) Reset() {
	*x = ListTemplateTelemetryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplateTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateTelemetryResponse) ProtoMessage() {}

func (x *ListTemplateTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateTelemetryResponse.ProtoReflect.Descriptor instead.
func (*ListTemplateTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{26}
}

func (x *ListTemplateTelemetryResponse) GetTemplateTeleObject() *structpb.Value {
	if x != nil {
		return x.TemplateTeleObject
	}
	return nil
}

type AddTemplateTelemetryExtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
	Id  string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	Kvs *structpb.Value `protobuf:"bytes,3,opt,name=kvs,proto3" json:"kvs"`
}

func (x *AddTemplateTelemetryExtRequest) Reset() {
	*x = AddTemplateTelemetryExtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTemplateTelemetryExtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTemplateTelemetryExtRequest) ProtoMessage() {}

func (x *AddTemplateTelemetryExtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTemplateTelemetryExtRequest.ProtoReflect.Descriptor instead.
func (*AddTemplateTelemetryExtRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{27}
}

func (x *AddTemplateTelemetryExtRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AddTemplateTelemetryExtRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddTemplateTelemetryExtRequest) GetKvs() *structpb.Value {
	if x != nil {
		return x.Kvs
	}
	return nil
}

type UpdateTemplateTelemetryExtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
	Id  string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	Kvs *structpb.Value `protobuf:"bytes,3,opt,name=kvs,proto3" json:"kvs"`
}

func (x *UpdateTemplateTelemetryExtRequest) Reset() {
	*x = UpdateTemplateTelemetryExtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplateTelemetryExtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateTelemetryExtRequest) ProtoMessage() {}

func (x *UpdateTemplateTelemetryExtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateTelemetryExtRequest.ProtoReflect.Descriptor instead.
func (*UpdateTemplateTelemetryExtRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateTemplateTelemetryExtRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UpdateTemplateTelemetryExtRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTemplateTelemetryExtRequest) GetKvs() *structpb.Value {
	if x != nil {
		return x.Kvs
	}
	return nil
}

type DeleteTemplateTelemetryExtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	Keys *Keys  `protobuf:"bytes,3,opt,name=keys,proto3" json:"keys"`
}

func (x *DeleteTemplateTelemetryExtRequest) Reset() {
	*x = DeleteTemplateTelemetryExtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemplateTelemetryExtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemplateTelemetryExtRequest) ProtoMessage() {}

func (x *DeleteTemplateTelemetryExtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemplateTelemetryExtRequest.ProtoReflect.Descriptor instead.
func (*DeleteTemplateTelemetryExtRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteTemplateTelemetryExtRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DeleteTemplateTelemetryExtRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteTemplateTelemetryExtRequest) GetKeys() *Keys {
	if x != nil {
		return x.Keys
	}
	return nil
}

//command
type AddTemplateCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//PropConfig cmd  = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "命令"}];
	Cmd *structpb.Value `protobuf:"bytes,2,opt,name=cmd,proto3" json:"cmd"`
	Uid string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
}

func (x *AddTemplateCommandRequest) Reset() {
	*x = AddTemplateCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTemplateCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTemplateCommandRequest) ProtoMessage() {}

func (x *AddTemplateCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTemplateCommandRequest.ProtoReflect.Descriptor instead.
func (*AddTemplateCommandRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{30}
}

func (x *AddTemplateCommandRequest) GetCmd() *structpb.Value {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *AddTemplateCommandRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type UpdateTemplateCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//PropConfig cmd  = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "命令"}];
	Cmd *structpb.Value `protobuf:"bytes,2,opt,name=cmd,proto3" json:"cmd"`
	//google.protobuf.Value cmd  = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "命令"}];
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
}

func (x *UpdateTemplateCommandRequest) Reset() {
	*x = UpdateTemplateCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplateCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateCommandRequest) ProtoMessage() {}

func (x *UpdateTemplateCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateCommandRequest.ProtoReflect.Descriptor instead.
func (*UpdateTemplateCommandRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateTemplateCommandRequest) GetCmd() *structpb.Value {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *UpdateTemplateCommandRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type DeleteTemplateCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
	Ids *Ids   `protobuf:"bytes,2,opt,name=ids,proto3" json:"ids"`
}

func (x *DeleteTemplateCommandRequest) Reset() {
	*x = DeleteTemplateCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemplateCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemplateCommandRequest) ProtoMessage() {}

func (x *DeleteTemplateCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemplateCommandRequest.ProtoReflect.Descriptor instead.
func (*DeleteTemplateCommandRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteTemplateCommandRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DeleteTemplateCommandRequest) GetIds() *Ids {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetTemplateCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
	Id  string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
}

func (x *GetTemplateCommandRequest) Reset() {
	*x = GetTemplateCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateCommandRequest) ProtoMessage() {}

func (x *GetTemplateCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateCommandRequest.ProtoReflect.Descriptor instead.
func (*GetTemplateCommandRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{33}
}

func (x *GetTemplateCommandRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetTemplateCommandRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTemplateCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//api.core.v1.EntityResponse templateCmdSingleObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "单个命令对象"}];
	TemplateCmdSingleObject *structpb.Value `protobuf:"bytes,1,opt,name=templateCmdSingleObject,proto3" json:"templateCmdSingleObject"`
}

func (x *GetTemplateCommandResponse) Reset() {
	*x = GetTemplateCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateCommandResponse) ProtoMessage() {}

func (x *GetTemplateCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateCommandResponse.ProtoReflect.Descriptor instead.
func (*GetTemplateCommandResponse) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{34}
}

func (x *GetTemplateCommandResponse) GetTemplateCmdSingleObject() *structpb.Value {
	if x != nil {
		return x.TemplateCmdSingleObject
	}
	return nil
}

type ListTemplateCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
}

func (x *ListTemplateCommandRequest) Reset() {
	*x = ListTemplateCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplateCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateCommandRequest) ProtoMessage() {}

func (x *ListTemplateCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateCommandRequest.ProtoReflect.Descriptor instead.
func (*ListTemplateCommandRequest) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{35}
}

func (x *ListTemplateCommandRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type ListTemplateCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//api.core.v1.EntityResponse templateCmdObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "命令列表对象"}];
	TemplateCmdObject *structpb.Value `protobuf:"bytes,1,opt,name=templateCmdObject,proto3" json:"templateCmdObject"`
}

func (x *ListTemplateCommandResponse) Reset() {
	*x = ListTemplateCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplateCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateCommandResponse) ProtoMessage() {}

func (x *ListTemplateCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateCommandResponse.ProtoReflect.Descriptor instead.
func (*ListTemplateCommandResponse) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{36}
}

func (x *ListTemplateCommandResponse) GetTemplateCmdObject() *structpb.Value {
	if x != nil {
		return x.TemplateCmdObject
	}
	return nil
}

// device to core
type TemplateEntityCoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicInfo *TemplateBasicInfo      `protobuf:"bytes,1,opt,name=basicInfo,proto3" json:"basicInfo"`
	SysField  *TemplateEntitySysField `protobuf:"bytes,2,opt,name=sysField,proto3" json:"sysField"`
}

func (x *TemplateEntityCoreInfo) Reset() {
	*x = TemplateEntityCoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateEntityCoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateEntityCoreInfo) ProtoMessage() {}

func (x *TemplateEntityCoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateEntityCoreInfo.ProtoReflect.Descriptor instead.
func (*TemplateEntityCoreInfo) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{37}
}

func (x *TemplateEntityCoreInfo) GetBasicInfo() *TemplateBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *TemplateEntityCoreInfo) GetSysField() *TemplateEntitySysField {
	if x != nil {
		return x.SysField
	}
	return nil
}

type UpdateTemplateEntityCoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicInfo *TemplateBasicInfo `protobuf:"bytes,1,opt,name=basicInfo,proto3" json:"basicInfo"`
}

func (x *UpdateTemplateEntityCoreInfo) Reset() {
	*x = UpdateTemplateEntityCoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplateEntityCoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateEntityCoreInfo) ProtoMessage() {}

func (x *UpdateTemplateEntityCoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateEntityCoreInfo.ProtoReflect.Descriptor instead.
func (*UpdateTemplateEntityCoreInfo) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateTemplateEntityCoreInfo) GetBasicInfo() *TemplateBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

type TemplateEntitySysField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId        string `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id"`
	XCreatedAt int64  `protobuf:"varint,2,opt,name=_createdAt,json=CreatedAt,proto3" json:"_createdAt"`
	XUpdatedAt int64  `protobuf:"varint,3,opt,name=_updatedAt,json=UpdatedAt,proto3" json:"_updatedAt"`
	XOwner     string `protobuf:"bytes,4,opt,name=_owner,json=Owner,proto3" json:"_owner"`
	XSource    string `protobuf:"bytes,5,opt,name=_source,json=Source,proto3" json:"_source"`
}

func (x *TemplateEntitySysField) Reset() {
	*x = TemplateEntitySysField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateEntitySysField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateEntitySysField) ProtoMessage() {}

func (x *TemplateEntitySysField) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateEntitySysField.ProtoReflect.Descriptor instead.
func (*TemplateEntitySysField) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{39}
}

func (x *TemplateEntitySysField) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *TemplateEntitySysField) GetXCreatedAt() int64 {
	if x != nil {
		return x.XCreatedAt
	}
	return 0
}

func (x *TemplateEntitySysField) GetXUpdatedAt() int64 {
	if x != nil {
		return x.XUpdatedAt
	}
	return 0
}

func (x *TemplateEntitySysField) GetXOwner() string {
	if x != nil {
		return x.XOwner
	}
	return ""
}

func (x *TemplateEntitySysField) GetXSource() string {
	if x != nil {
		return x.XSource
	}
	return ""
}

type ListEntityQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum      int32        `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num"`
	PageSize     int32        `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	OrderBy      string       `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by"`
	IsDescending bool         `protobuf:"varint,4,opt,name=is_descending,json=isDescending,proto3" json:"is_descending"`
	Query        string       `protobuf:"bytes,5,opt,name=query,proto3" json:"query"`
	Condition    []*Condition `protobuf:"bytes,6,rep,name=condition,proto3" json:"condition"`
}

func (x *ListEntityQuery) Reset() {
	*x = ListEntityQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEntityQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntityQuery) ProtoMessage() {}

func (x *ListEntityQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntityQuery.ProtoReflect.Descriptor instead.
func (*ListEntityQuery) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{40}
}

func (x *ListEntityQuery) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListEntityQuery) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEntityQuery) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListEntityQuery) GetIsDescending() bool {
	if x != nil {
		return x.IsDescending
	}
	return false
}

func (x *ListEntityQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListEntityQuery) GetCondition() []*Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    string `protobuf:"bytes,1,opt,name=field,proto3" json:"field"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
	Operator string `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_template_v1_template_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_api_template_v1_template_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_api_template_v1_template_proto_rawDescGZIP(), []int{41}
}

func (x *Condition) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Condition) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Condition) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

var File_api_template_v1_template_proto protoreflect.FileDescriptor

var file_api_template_v1_template_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x11, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x25, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11,
	0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe5, 0x90, 0x8d, 0xe7, 0xa7,
	0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x32, 0x18,
	0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe8, 0x87, 0xaa, 0xe5, 0xae, 0x9a, 0xe4, 0xb9, 0x89, 0x69,
	0x64, 0x20, 0xe9, 0x80, 0x89, 0xe5, 0xa1, 0xab, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0xa8,
	0xa1, 0xe6, 0x9d, 0xbf, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xef, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe5, 0x90, 0x8d, 0xe7, 0xa7,
	0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xe6, 0xa0, 0x87, 0xe8, 0xaf, 0x86,
	0xe7, 0xac, 0xa6, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x95, 0xb0, 0xe6,
	0x8d, 0xae, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4a,
	0x0a, 0x06, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x32, 0x15, 0xe6, 0x95, 0xb0,
	0xe6, 0x8d, 0xae, 0xe5, 0xae, 0x9a, 0xe4, 0xb9, 0x89, 0xe5, 0x92, 0x8c, 0xe7, 0xba, 0xa6, 0xe6,
	0x9d, 0x9f, 0x52, 0x06, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe8, 0xaf, 0xb4, 0xe6, 0x98, 0x8e, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x03, 0x49, 0x64, 0x73,
	0x12, 0x20, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0e, 0x92,
	0x41, 0x0b, 0x32, 0x09, 0x49, 0x44, 0x20, 0xe6, 0x95, 0xb0, 0xe7, 0xbb, 0x84, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x2b, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0f, 0x92, 0x41, 0x0c, 0x32, 0x0a, 0x6b,
	0x65, 0x79, 0x20, 0xe6, 0x95, 0xb0, 0xe7, 0xbb, 0x84, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22,
	0x72, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe5, 0x9f, 0xba, 0xe6,
	0x9c, 0xac, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x6b, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x0e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x11, 0x92,
	0x41, 0x0e, 0x32, 0x0c, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1,
	0x52, 0x0e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x93, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x09, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe5, 0x9f,
	0xba, 0xe6, 0x9c, 0xac, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49,
	0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x6b, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x51, 0x0a, 0x0e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe5, 0xaf, 0xb9,
	0xe8, 0xb1, 0xa1, 0x52, 0x0e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x22, 0x55, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x73, 0x42,
	0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0x20, 0xe6,
	0x95, 0xb0, 0xe7, 0xbb, 0x84, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x10, 0x66, 0x61, 0x69, 0x6c, 0x64, 0x44, 0x65,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x64, 0x44, 0x65, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe5,
	0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0x20, 0xe6, 0x95, 0xb0, 0xe7,
	0xbb, 0x84, 0x52, 0x10, 0x66, 0x61, 0x69, 0x6c, 0x64, 0x44, 0x65, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x22, 0x56, 0x0a, 0x10, 0x46, 0x61, 0x69, 0x6c, 0x64, 0x44, 0x65, 0x6c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d,
	0xbf, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe5, 0x8e,
	0x9f, 0xe5, 0x9b, 0xa0, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32,
	0x0c, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0x52, 0x0e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x7d, 0x0a,
	0x1b, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x04,
	0x61, 0x74, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0xe5,
	0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x1f, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6,
	0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x80, 0x01, 0x0a,
	0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3d, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0xb1, 0x9e, 0xe6,
	0x80, 0xa7, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x1f,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a,
	0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0x7f, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x64, 0x73, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe5, 0xb1, 0x9e, 0xe6,
	0x80, 0xa7, 0x49, 0x44, 0x20, 0xe6, 0x95, 0xb0, 0xe7, 0xbb, 0x84, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x5d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41,
	0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41,
	0x0a, 0x32, 0x08, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x8b, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6b, 0x0a, 0x18, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32,
	0x12, 0xe5, 0x8d, 0x95, 0xe4, 0xb8, 0xaa, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0xe5, 0xaf, 0xb9,
	0xe8, 0xb1, 0xa1, 0x52, 0x18, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x3f, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32,
	0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x80,
	0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe5, 0xb1, 0x9e, 0xe6, 0x80,
	0xa7, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0x52, 0x12, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x22, 0x77, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x04, 0x74, 0x65, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe9, 0x81, 0xa5,
	0xe6, 0xb5, 0x8b, 0x52, 0x04, 0x74, 0x65, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1,
	0xe6, 0x9d, 0xbf, 0x49, 0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x7a, 0x0a, 0x1e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x04,
	0x74, 0x65, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe9, 0x81, 0xa5, 0xe6, 0xb5, 0x8b, 0x52,
	0x04, 0x74, 0x65, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49,
	0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x7f, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6,
	0x9d, 0xbf, 0x49, 0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x73, 0x42, 0x14, 0x92, 0x41,
	0x11, 0x32, 0x0f, 0xe9, 0x81, 0xa5, 0xe6, 0xb5, 0x8b, 0x49, 0x44, 0x20, 0xe6, 0x95, 0xb0, 0xe7,
	0xbb, 0x84, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x5d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf,
	0x49, 0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe9, 0x81, 0xa5, 0xe6, 0xb5, 0x8b,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x18, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe5, 0x8d, 0x95, 0xe4, 0xb8, 0xaa, 0xe9, 0x81,
	0xa5, 0xe6, 0xb5, 0x8b, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0x52, 0x18, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0x3f, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0x49, 0x44,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x17, 0x92, 0x41, 0x14,
	0x32, 0x12, 0xe9, 0x81, 0xa5, 0xe6, 0xb5, 0x8b, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0xe5, 0xaf,
	0xb9, 0xe8, 0xb1, 0xa1, 0x52, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x1e, 0x41, 0x64, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x45, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6,
	0xa8, 0xa1, 0xe5, 0x9e, 0x8b, 0x49, 0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe9,
	0x81, 0xa5, 0xe6, 0xb5, 0x8b, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x03, 0x6b,
	0x76, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe9, 0x85, 0x8d,
	0xe7, 0xbd, 0xae, 0x4b, 0x56, 0x20, 0x6d, 0x61, 0x70, 0x52, 0x03, 0x6b, 0x76, 0x73, 0x22, 0xa6,
	0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x78, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe5, 0x9e, 0x8b, 0x49, 0x44,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe9, 0x81, 0xa5, 0xe6, 0xb5, 0x8b, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x03, 0x6b, 0x76, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12,
	0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x4b, 0x56, 0x20, 0x6d,
	0x61, 0x70, 0x52, 0x03, 0x6b, 0x76, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x45, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32,
	0x08, 0xe6, 0xa8, 0xa1, 0xe5, 0x9e, 0x8b, 0x49, 0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32,
	0x08, 0xe9, 0x81, 0xa5, 0xe6, 0xb5, 0x8b, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65,
	0x79, 0x73, 0x42, 0x1b, 0x92, 0x41, 0x18, 0x32, 0x16, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe9,
	0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x6b, 0x65, 0x79, 0x20, 0xe6, 0x95, 0xb0, 0xe7, 0xbb, 0x84, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x73, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe5, 0x91,
	0xbd, 0xe4, 0xbb, 0xa4, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1,
	0xe6, 0x9d, 0xbf, 0x49, 0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x76, 0x0a, 0x1c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe5, 0x91, 0xbd, 0xe4, 0xbb, 0xa4, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x7d, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x64, 0x73, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe5, 0x91, 0xbd,
	0xe4, 0xbb, 0xa4, 0x49, 0x44, 0x20, 0xe6, 0x95, 0xb0, 0xe7, 0xbb, 0x84, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x5b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a,
	0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a,
	0x32, 0x08, 0xe5, 0x91, 0xbd, 0xe4, 0xbb, 0xa4, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x87,
	0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a,
	0x17, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x64, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe5, 0x8d, 0x95,
	0xe4, 0xb8, 0xaa, 0xe5, 0x91, 0xbd, 0xe4, 0xbb, 0xa4, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0x52,
	0x17, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x64, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x3d, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf,
	0x49, 0x44, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x6d, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12,
	0xe5, 0x91, 0xbd, 0xe4, 0xbb, 0xa4, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0xe5, 0xaf, 0xb9, 0xe8,
	0xb1, 0xa1, 0x52, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x64, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x16, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x53, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x9f,
	0xba, 0xe6, 0x9c, 0xac, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x56, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x79, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe7, 0xb3, 0xbb, 0xe7, 0xbb, 0x9f, 0xe4, 0xbf, 0xa1,
	0xe6, 0x81, 0xaf, 0x52, 0x08, 0x73, 0x79, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x73, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a,
	0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x9f, 0xba, 0xe6, 0x9c,
	0xac, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xff, 0x01, 0x0a, 0x16, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x79, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a,
	0x03, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x32,
	0x0b, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0x49, 0x44, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x32, 0x15, 0xe8, 0xae, 0xbe, 0xe5, 0xa4,
	0x87, 0xe7, 0xbb, 0x84, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x1a, 0x92, 0x41, 0x17, 0x32, 0x15, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0xe6,
	0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0x92, 0x41, 0x0c, 0x32, 0x0a, 0x20, 0xe6, 0x89,
	0x80, 0xe6, 0x9c, 0x89, 0xe8, 0x80, 0x85, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x07, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe6, 0x9d, 0xa5, 0xe6, 0xba, 0x90, 0x52, 0x06, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0xfc, 0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32,
	0x12, 0xe8, 0xae, 0xb0, 0xe5, 0xbd, 0x95, 0xe5, 0xbc, 0x80, 0xe5, 0xa7, 0x8b, 0xe4, 0xbd, 0x8d,
	0xe7, 0xbd, 0xae, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x34, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe6, 0xaf, 0x8f, 0xe9, 0xa1, 0xb5, 0xe9, 0x99, 0x90, 0xe5,
	0x88, 0xb6, 0xe6, 0x9d, 0xa1, 0xe6, 0x95, 0xb0, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x8e, 0x92, 0xe5, 0xba,
	0x8f, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x59, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x34, 0x92, 0x41, 0x31, 0x32, 0x2f, 0xe6, 0x98,
	0xaf, 0xe5, 0x90, 0xa6, 0xe9, 0x80, 0x86, 0xe5, 0xba, 0x8f, 0xef, 0xbc, 0x8c, 0x20, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0xef, 0xbc, 0x9a, 0xe4, 0xb8, 0x8d, 0xe9, 0x80, 0x86, 0xe5, 0xba, 0x8f, 0xef,
	0xbc, 0x8c, 0x74, 0x72, 0x75, 0x65, 0x3a, 0xe9, 0x80, 0x86, 0xe5, 0xba, 0x8f, 0x52, 0x0c, 0x69,
	0x73, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32,
	0x0e, 0x65, 0x73, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe6, 0x9d, 0xa1, 0xe4, 0xbb, 0xb6, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe7, 0xbb, 0x84, 0xe5,
	0x90, 0x88, 0xe6, 0x9d, 0xa1, 0xe4, 0xbb, 0xb6, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xf0, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe8, 0xbe, 0x93,
	0xe5, 0x87, 0xba, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0x92, 0x41, 0x05, 0x32, 0x03, 0xe5, 0x80, 0xbc, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x93, 0x01, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x77, 0x92, 0x41, 0x74, 0x32, 0x72, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c,
	0xe7, 0xac, 0xa6, 0x2c, 0x20, 0x24, 0x65, 0x71, 0xe4, 0xb8, 0xba, 0xe7, 0x9b, 0xb8, 0xe7, 0xad,
	0x89, 0xef, 0xbc, 0x8c, 0x24, 0x6e, 0x65, 0x71, 0xe4, 0xb8, 0xba, 0xe4, 0xb8, 0x8d, 0xe7, 0xad,
	0x89, 0xef, 0xbc, 0x8c, 0x24, 0x6c, 0x74, 0xe4, 0xb8, 0xba, 0xe5, 0xb0, 0x8f, 0xe4, 0xba, 0x8e,
	0xef, 0xbc, 0x8c, 0x24, 0x67, 0x74, 0xe4, 0xb8, 0xba, 0xe5, 0xa4, 0xa7, 0xe4, 0xba, 0x8e, 0xef,
	0xbc, 0x8c, 0x24, 0x6c, 0x6e, 0x65, 0xe4, 0xb8, 0xba, 0xe5, 0xb0, 0x8f, 0xe4, 0xba, 0x8e, 0xe7,
	0xad, 0x89, 0xe4, 0xba, 0x8e, 0xef, 0xbc, 0x8c, 0x20, 0x24, 0x67, 0x6e, 0x65, 0xe4, 0xb8, 0xba,
	0xe5, 0xa4, 0xa7, 0xe4, 0xba, 0x8e, 0xe7, 0xad, 0x89, 0xe4, 0xba, 0x8e, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x32, 0xae, 0x25, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0xbb, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22,
	0x0a, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x3a, 0x09, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x92, 0x41, 0x38, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f,
	0x4b, 0x12, 0xc1, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x1a, 0x10, 0x2f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x3a,
	0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x92, 0x41, 0x38, 0x0a, 0x08, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12,
	0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xbc, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x22, 0x11, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x3a, 0x03, 0x69, 0x64, 0x73, 0x92, 0x41, 0x38, 0x0a, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04,
	0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xa7, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x32, 0x0a, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x67, 0x65, 0x74, 0x20, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xce,
	0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x70, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1a, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x3a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x92, 0x41, 0x45, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x16, 0x61, 0x64, 0x64, 0x20, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2a, 0x14, 0x41, 0x64,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12,
	0xda, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x76, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x1a, 0x1a, 0x2f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x3a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x92, 0x41,
	0x4b, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x19, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x20, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4a,
	0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xe0, 0x01, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x7c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22, 0x21, 0x2f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x03, 0x69, 0x64,
	0x73, 0x92, 0x41, 0x4b, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12,
	0xe4, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92, 0x41,
	0x45, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x16, 0x67, 0x65, 0x74,
	0x20, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x2a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30,
	0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xe4, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x92, 0x41, 0x47, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x17, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xce, 0x01,
	0x0a, 0x14, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x70, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x22, 0x22, 0x1a, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79,
	0x3a, 0x04, 0x74, 0x65, 0x6c, 0x65, 0x92, 0x41, 0x45, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x61, 0x64, 0x64, 0x20, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x20, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2a, 0x14, 0x41, 0x64, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xda,
	0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x76, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x1a, 0x1a, 0x2f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x3a, 0x04, 0x74, 0x65, 0x6c, 0x65, 0x92, 0x41, 0x4b,
	0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x19, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x20, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x2a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x4a, 0x0b,
	0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xe0, 0x01, 0x0a, 0x17,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x7c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22, 0x21, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x03, 0x69, 0x64, 0x73,
	0x92, 0x41, 0x4b, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x19, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xe4,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x45,
	0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x16, 0x67, 0x65, 0x74, 0x20,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x2a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12,
	0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xe4, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12,
	0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x92, 0x41, 0x47, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x4a,
	0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xe3, 0x01, 0x0a,
	0x17, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x78, 0x74, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45,
	0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x7f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x23, 0x2f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x78, 0x74, 0x3a, 0x03,
	0x6b, 0x76, 0x73, 0x92, 0x41, 0x4c, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x61, 0x64, 0x64, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x20, 0x65, 0x78, 0x74, 0x2a, 0x17, 0x41, 0x64,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x45, 0x78, 0x74, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02,
	0x4f, 0x4b, 0x12, 0xf0, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x78,
	0x74, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x78, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x85, 0x01,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x1a, 0x23, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x78, 0x74, 0x3a, 0x03, 0x6b, 0x76, 0x73,
	0x92, 0x41, 0x52, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x20, 0x65, 0x78, 0x74, 0x2a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x78, 0x74, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12,
	0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xf8, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x45, 0x78, 0x74, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x78,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x8d, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x22, 0x2a, 0x2f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x78, 0x74, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x92, 0x41, 0x52, 0x0a, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x20, 0x65, 0x78, 0x74, 0x2a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79,
	0x45, 0x78, 0x74, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b,
	0x12, 0xc3, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x69, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x22, 0x18, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f,
	0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x03, 0x63,
	0x6d, 0x64, 0x92, 0x41, 0x41, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x61, 0x64, 0x64, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2a, 0x12, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30,
	0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xcf, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x6f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x1a,
	0x18, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64,
	0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x03, 0x63, 0x6d, 0x64, 0x92, 0x41,
	0x47, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x17, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4a, 0x0b, 0x0a, 0x03, 0x32,
	0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xd6, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x76, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x26, 0x22, 0x1f, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75,
	0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x3a, 0x03, 0x69, 0x64, 0x73, 0x92, 0x41, 0x47, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x17, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f,
	0x4b, 0x12, 0xd8, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x69, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x41, 0x0a, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x14, 0x67, 0x65, 0x74, 0x20, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2a, 0x12, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4a,
	0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xd8, 0x01, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x66, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x92, 0x41, 0x43, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x6c, 0x69, 0x73, 0x74, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30,
	0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x42, 0x48, 0x0a, 0x0f, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x33, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2d, 0x69,
	0x6f, 0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_template_v1_template_proto_rawDescOnce sync.Once
	file_api_template_v1_template_proto_rawDescData = file_api_template_v1_template_proto_rawDesc
)

func file_api_template_v1_template_proto_rawDescGZIP() []byte {
	file_api_template_v1_template_proto_rawDescOnce.Do(func() {
		file_api_template_v1_template_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_template_v1_template_proto_rawDescData)
	})
	return file_api_template_v1_template_proto_rawDescData
}

var file_api_template_v1_template_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_api_template_v1_template_proto_goTypes = []interface{}{
	(*TemplateBasicInfo)(nil),                 // 0: api.template.v1.TemplateBasicInfo
	(*PropConfig)(nil),                        // 1: api.template.v1.PropConfig
	(*Ids)(nil),                               // 2: api.template.v1.Ids
	(*Keys)(nil),                              // 3: api.template.v1.Keys
	(*CreateTemplateRequest)(nil),             // 4: api.template.v1.CreateTemplateRequest
	(*CreateTemplateResponse)(nil),            // 5: api.template.v1.CreateTemplateResponse
	(*UpdateTemplateRequest)(nil),             // 6: api.template.v1.UpdateTemplateRequest
	(*UpdateTemplateResponse)(nil),            // 7: api.template.v1.UpdateTemplateResponse
	(*DeleteTemplateRequest)(nil),             // 8: api.template.v1.DeleteTemplateRequest
	(*DeleteTemplateResponse)(nil),            // 9: api.template.v1.DeleteTemplateResponse
	(*FaildDelTemplate)(nil),                  // 10: api.template.v1.FaildDelTemplate
	(*GetTemplateRequest)(nil),                // 11: api.template.v1.GetTemplateRequest
	(*GetTemplateResponse)(nil),               // 12: api.template.v1.GetTemplateResponse
	(*AddTemplateAttributeRequest)(nil),       // 13: api.template.v1.AddTemplateAttributeRequest
	(*UpdateTemplateAttributeRequest)(nil),    // 14: api.template.v1.UpdateTemplateAttributeRequest
	(*DeleteTemplateAttributeRequest)(nil),    // 15: api.template.v1.DeleteTemplateAttributeRequest
	(*GetTemplateAttributeRequest)(nil),       // 16: api.template.v1.GetTemplateAttributeRequest
	(*GetTemplateAttributeResponse)(nil),      // 17: api.template.v1.GetTemplateAttributeResponse
	(*ListTemplateAttributeRequest)(nil),      // 18: api.template.v1.ListTemplateAttributeRequest
	(*ListTemplateAttributeResponse)(nil),     // 19: api.template.v1.ListTemplateAttributeResponse
	(*AddTemplateTelemetryRequest)(nil),       // 20: api.template.v1.AddTemplateTelemetryRequest
	(*UpdateTemplateTelemetryRequest)(nil),    // 21: api.template.v1.UpdateTemplateTelemetryRequest
	(*DeleteTemplateTelemetryRequest)(nil),    // 22: api.template.v1.DeleteTemplateTelemetryRequest
	(*GetTemplateTelemetryRequest)(nil),       // 23: api.template.v1.GetTemplateTelemetryRequest
	(*GetTemplateTelemetryResponse)(nil),      // 24: api.template.v1.GetTemplateTelemetryResponse
	(*ListTemplateTelemetryRequest)(nil),      // 25: api.template.v1.ListTemplateTelemetryRequest
	(*ListTemplateTelemetryResponse)(nil),     // 26: api.template.v1.ListTemplateTelemetryResponse
	(*AddTemplateTelemetryExtRequest)(nil),    // 27: api.template.v1.AddTemplateTelemetryExtRequest
	(*UpdateTemplateTelemetryExtRequest)(nil), // 28: api.template.v1.UpdateTemplateTelemetryExtRequest
	(*DeleteTemplateTelemetryExtRequest)(nil), // 29: api.template.v1.DeleteTemplateTelemetryExtRequest
	(*AddTemplateCommandRequest)(nil),         // 30: api.template.v1.AddTemplateCommandRequest
	(*UpdateTemplateCommandRequest)(nil),      // 31: api.template.v1.UpdateTemplateCommandRequest
	(*DeleteTemplateCommandRequest)(nil),      // 32: api.template.v1.DeleteTemplateCommandRequest
	(*GetTemplateCommandRequest)(nil),         // 33: api.template.v1.GetTemplateCommandRequest
	(*GetTemplateCommandResponse)(nil),        // 34: api.template.v1.GetTemplateCommandResponse
	(*ListTemplateCommandRequest)(nil),        // 35: api.template.v1.ListTemplateCommandRequest
	(*ListTemplateCommandResponse)(nil),       // 36: api.template.v1.ListTemplateCommandResponse
	(*TemplateEntityCoreInfo)(nil),            // 37: api.template.v1.TemplateEntityCoreInfo
	(*UpdateTemplateEntityCoreInfo)(nil),      // 38: api.template.v1.UpdateTemplateEntityCoreInfo
	(*TemplateEntitySysField)(nil),            // 39: api.template.v1.TemplateEntitySysField
	(*ListEntityQuery)(nil),                   // 40: api.template.v1.ListEntityQuery
	(*Condition)(nil),                         // 41: api.template.v1.Condition
	(*structpb.Value)(nil),                    // 42: google.protobuf.Value
	(*emptypb.Empty)(nil),                     // 43: google.protobuf.Empty
}
var file_api_template_v1_template_proto_depIdxs = []int32{
	42, // 0: api.template.v1.PropConfig.define:type_name -> google.protobuf.Value
	0,  // 1: api.template.v1.CreateTemplateRequest.basicInfo:type_name -> api.template.v1.TemplateBasicInfo
	42, // 2: api.template.v1.CreateTemplateResponse.templateObject:type_name -> google.protobuf.Value
	0,  // 3: api.template.v1.UpdateTemplateRequest.basicInfo:type_name -> api.template.v1.TemplateBasicInfo
	42, // 4: api.template.v1.UpdateTemplateResponse.templateObject:type_name -> google.protobuf.Value
	2,  // 5: api.template.v1.DeleteTemplateRequest.ids:type_name -> api.template.v1.Ids
	10, // 6: api.template.v1.DeleteTemplateResponse.faildDelTemplate:type_name -> api.template.v1.FaildDelTemplate
	42, // 7: api.template.v1.GetTemplateResponse.templateObject:type_name -> google.protobuf.Value
	42, // 8: api.template.v1.AddTemplateAttributeRequest.attr:type_name -> google.protobuf.Value
	42, // 9: api.template.v1.UpdateTemplateAttributeRequest.attr:type_name -> google.protobuf.Value
	2,  // 10: api.template.v1.DeleteTemplateAttributeRequest.ids:type_name -> api.template.v1.Ids
	42, // 11: api.template.v1.GetTemplateAttributeResponse.templateAttrSingleObject:type_name -> google.protobuf.Value
	42, // 12: api.template.v1.ListTemplateAttributeResponse.templateAttrObject:type_name -> google.protobuf.Value
	42, // 13: api.template.v1.AddTemplateTelemetryRequest.tele:type_name -> google.protobuf.Value
	42, // 14: api.template.v1.UpdateTemplateTelemetryRequest.tele:type_name -> google.protobuf.Value
	2,  // 15: api.template.v1.DeleteTemplateTelemetryRequest.ids:type_name -> api.template.v1.Ids
	42, // 16: api.template.v1.GetTemplateTelemetryResponse.templateTeleSingleObject:type_name -> google.protobuf.Value
	42, // 17: api.template.v1.ListTemplateTelemetryResponse.templateTeleObject:type_name -> google.protobuf.Value
	42, // 18: api.template.v1.AddTemplateTelemetryExtRequest.kvs:type_name -> google.protobuf.Value
	42, // 19: api.template.v1.UpdateTemplateTelemetryExtRequest.kvs:type_name -> google.protobuf.Value
	3,  // 20: api.template.v1.DeleteTemplateTelemetryExtRequest.keys:type_name -> api.template.v1.Keys
	42, // 21: api.template.v1.AddTemplateCommandRequest.cmd:type_name -> google.protobuf.Value
	42, // 22: api.template.v1.UpdateTemplateCommandRequest.cmd:type_name -> google.protobuf.Value
	2,  // 23: api.template.v1.DeleteTemplateCommandRequest.ids:type_name -> api.template.v1.Ids
	42, // 24: api.template.v1.GetTemplateCommandResponse.templateCmdSingleObject:type_name -> google.protobuf.Value
	42, // 25: api.template.v1.ListTemplateCommandResponse.templateCmdObject:type_name -> google.protobuf.Value
	0,  // 26: api.template.v1.TemplateEntityCoreInfo.basicInfo:type_name -> api.template.v1.TemplateBasicInfo
	39, // 27: api.template.v1.TemplateEntityCoreInfo.sysField:type_name -> api.template.v1.TemplateEntitySysField
	0,  // 28: api.template.v1.UpdateTemplateEntityCoreInfo.basicInfo:type_name -> api.template.v1.TemplateBasicInfo
	41, // 29: api.template.v1.ListEntityQuery.condition:type_name -> api.template.v1.Condition
	4,  // 30: api.template.v1.Template.CreateTemplate:input_type -> api.template.v1.CreateTemplateRequest
	6,  // 31: api.template.v1.Template.UpdateTemplate:input_type -> api.template.v1.UpdateTemplateRequest
	8,  // 32: api.template.v1.Template.DeleteTemplate:input_type -> api.template.v1.DeleteTemplateRequest
	11, // 33: api.template.v1.Template.GetTemplate:input_type -> api.template.v1.GetTemplateRequest
	13, // 34: api.template.v1.Template.AddTemplateAttribute:input_type -> api.template.v1.AddTemplateAttributeRequest
	14, // 35: api.template.v1.Template.UpdateTemplateAttribute:input_type -> api.template.v1.UpdateTemplateAttributeRequest
	15, // 36: api.template.v1.Template.DeleteTemplateAttribute:input_type -> api.template.v1.DeleteTemplateAttributeRequest
	16, // 37: api.template.v1.Template.GetTemplateAttribute:input_type -> api.template.v1.GetTemplateAttributeRequest
	18, // 38: api.template.v1.Template.ListTemplateAttribute:input_type -> api.template.v1.ListTemplateAttributeRequest
	20, // 39: api.template.v1.Template.AddTemplateTelemetry:input_type -> api.template.v1.AddTemplateTelemetryRequest
	21, // 40: api.template.v1.Template.UpdateTemplateTelemetry:input_type -> api.template.v1.UpdateTemplateTelemetryRequest
	22, // 41: api.template.v1.Template.DeleteTemplateTelemetry:input_type -> api.template.v1.DeleteTemplateTelemetryRequest
	23, // 42: api.template.v1.Template.GetTemplateTelemetry:input_type -> api.template.v1.GetTemplateTelemetryRequest
	25, // 43: api.template.v1.Template.ListTemplateTelemetry:input_type -> api.template.v1.ListTemplateTelemetryRequest
	27, // 44: api.template.v1.Template.AddTemplateTelemetryExt:input_type -> api.template.v1.AddTemplateTelemetryExtRequest
	28, // 45: api.template.v1.Template.UpdateTemplateTelemetryExt:input_type -> api.template.v1.UpdateTemplateTelemetryExtRequest
	29, // 46: api.template.v1.Template.DeleteTemplateTelemetryExt:input_type -> api.template.v1.DeleteTemplateTelemetryExtRequest
	30, // 47: api.template.v1.Template.AddTemplateCommand:input_type -> api.template.v1.AddTemplateCommandRequest
	31, // 48: api.template.v1.Template.UpdateTemplateCommand:input_type -> api.template.v1.UpdateTemplateCommandRequest
	32, // 49: api.template.v1.Template.DeleteTemplateCommand:input_type -> api.template.v1.DeleteTemplateCommandRequest
	33, // 50: api.template.v1.Template.GetTemplateCommand:input_type -> api.template.v1.GetTemplateCommandRequest
	35, // 51: api.template.v1.Template.ListTemplateCommand:input_type -> api.template.v1.ListTemplateCommandRequest
	5,  // 52: api.template.v1.Template.CreateTemplate:output_type -> api.template.v1.CreateTemplateResponse
	7,  // 53: api.template.v1.Template.UpdateTemplate:output_type -> api.template.v1.UpdateTemplateResponse
	9,  // 54: api.template.v1.Template.DeleteTemplate:output_type -> api.template.v1.DeleteTemplateResponse
	12, // 55: api.template.v1.Template.GetTemplate:output_type -> api.template.v1.GetTemplateResponse
	43, // 56: api.template.v1.Template.AddTemplateAttribute:output_type -> google.protobuf.Empty
	43, // 57: api.template.v1.Template.UpdateTemplateAttribute:output_type -> google.protobuf.Empty
	43, // 58: api.template.v1.Template.DeleteTemplateAttribute:output_type -> google.protobuf.Empty
	17, // 59: api.template.v1.Template.GetTemplateAttribute:output_type -> api.template.v1.GetTemplateAttributeResponse
	19, // 60: api.template.v1.Template.ListTemplateAttribute:output_type -> api.template.v1.ListTemplateAttributeResponse
	43, // 61: api.template.v1.Template.AddTemplateTelemetry:output_type -> google.protobuf.Empty
	43, // 62: api.template.v1.Template.UpdateTemplateTelemetry:output_type -> google.protobuf.Empty
	43, // 63: api.template.v1.Template.DeleteTemplateTelemetry:output_type -> google.protobuf.Empty
	24, // 64: api.template.v1.Template.GetTemplateTelemetry:output_type -> api.template.v1.GetTemplateTelemetryResponse
	26, // 65: api.template.v1.Template.ListTemplateTelemetry:output_type -> api.template.v1.ListTemplateTelemetryResponse
	43, // 66: api.template.v1.Template.AddTemplateTelemetryExt:output_type -> google.protobuf.Empty
	43, // 67: api.template.v1.Template.UpdateTemplateTelemetryExt:output_type -> google.protobuf.Empty
	43, // 68: api.template.v1.Template.DeleteTemplateTelemetryExt:output_type -> google.protobuf.Empty
	43, // 69: api.template.v1.Template.AddTemplateCommand:output_type -> google.protobuf.Empty
	43, // 70: api.template.v1.Template.UpdateTemplateCommand:output_type -> google.protobuf.Empty
	43, // 71: api.template.v1.Template.DeleteTemplateCommand:output_type -> google.protobuf.Empty
	34, // 72: api.template.v1.Template.GetTemplateCommand:output_type -> api.template.v1.GetTemplateCommandResponse
	36, // 73: api.template.v1.Template.ListTemplateCommand:output_type -> api.template.v1.ListTemplateCommandResponse
	52, // [52:74] is the sub-list for method output_type
	30, // [30:52] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_api_template_v1_template_proto_init() }
func file_api_template_v1_template_proto_init() {
	if File_api_template_v1_template_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_template_v1_template_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ids); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaildDelTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTemplateAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemplateAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemplateAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplateAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplateAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTemplateTelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemplateTelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemplateTelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateTelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateTelemetryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplateTelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplateTelemetryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTemplateTelemetryExtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemplateTelemetryExtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemplateTelemetryExtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTemplateCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemplateCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemplateCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplateCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTemplateCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateEntityCoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemplateEntityCoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateEntitySysField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEntityQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_template_v1_template_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_template_v1_template_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_template_v1_template_proto_goTypes,
		DependencyIndexes: file_api_template_v1_template_proto_depIdxs,
		MessageInfos:      file_api_template_v1_template_proto_msgTypes,
	}.Build()
	File_api_template_v1_template_proto = out.File
	file_api_template_v1_template_proto_rawDesc = nil
	file_api_template_v1_template_proto_goTypes = nil
	file_api_template_v1_template_proto_depIdxs = nil
}
