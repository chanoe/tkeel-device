
syntax = "proto3";

package api.device.v1;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";
import public "tkeel-io/core/api/v1/entity.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/tkeel-io/tkeel-device/api/device/v1;v1";
option java_multiple_files = true;
option java_package = "api.device.v1";

service Device {
  rpc CreateDevice(CreateDeviceRequest) returns (CreateDeviceResponse) {
    option (google.api.http) = {
      post : "/devices"
      body : "devBasicInfo"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "create device entity";
        operation_id: "CreateDevice";
        tags: "device";
        responses: {
            key: "200"
            value: {
                description: "OK";
            }
        }
    };
  };
  rpc UpdateDevice(UpdateDeviceRequest) returns (UpdateDeviceResponse) {
    option (google.api.http) = {
      put : "/devices/{id}"
      body : "devBasicInfo"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "update device entity";
        operation_id: "UpdateDevice";
        tags: "device";
        responses: {
            key: "200"
            value: {
                description: "OK";
            }
        }
    };
  };
  rpc DeleteDevice(DeleteDeviceRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/devices/delete"
      body : "ids"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "delete device entity";
        operation_id: "DeleteDevice";
        tags: "device";
        responses: {
            key: "200"
            value: {
                description: "OK";
            }
        }
    };
  };
  rpc GetDevice(GetDeviceRequest) returns (GetDeviceResponse) {
    option (google.api.http) = {
      get : "/devices/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "get device entity";
        operation_id: "GetDevice";
        tags: "device";
        responses: {
            key: "200"
            value: {
                description: "OK";
            }
        }
    };
  };
  rpc ListDevice(ListDeviceRequest) returns (ListDeviceResponse) {
    option (google.api.http) = {
      post : "/devices/search"
      body : "listEntityQuery"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "list device entity";
        operation_id: "ListDevice";
        tags: "device";
        responses: {
            key: "200"
            value: {
                description: "OK";
            }
        }
    };
  };
  rpc EnableDevice(EnableDeviceRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/devices/{id}/enable"
      body : "enable"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "enable device";
        operation_id: "EnableDevice";
        tags: "device";
        responses: {
            key: "200"
            value: {
                description: "OK";
            }
        }
    };
  };
  rpc AddDeviceExt(AddDeviceExtRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/devices/{id}/ext"
      body : "ext"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "add device extensions";
        operation_id: "AddDeviceExt";
        tags: "device";
        responses: {
            key: "200"
            value: {
                description: "OK";
            }
        }
    };
  };
  rpc DeleteDeviceExt(DeleteDeviceExtRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/devices/{id}/ext/delete"
      body : "keys"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "delete device extensions";
        operation_id: "DelDeviceExt";
        tags: "device";
        responses: {
            key: "200"
            value: {
                description: "OK";
            }
        }
    };
  };
  rpc UpdateDeviceExt(UpdateDeviceExtRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/devices/{id}/ext"
      body : "ext"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "update device extensions";
        operation_id: "UpdateDeviceExt";
        tags: "device";
        responses: {
            key: "200"
            value: {
                description: "OK";
            }
        }
    };
  };
}

// user to device
message CreateDeviceRequest { 
    DeviceEntityBasicInfo devBasicInfo = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备信息"}]; 
}
message CreateDeviceResponse {
    api.core.v1.EntityResponse deviceObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备对象"}];
}
message UpdateDeviceRequest {
    string id = 1  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备ID"}];
    DeviceEntityBasicInfo devBasicInfo = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备信息"}]; 
}
message UpdateDeviceResponse {
    api.core.v1.EntityResponse deviceObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备对象"}];
}

message DeleteDeviceRequest { 
    Ids ids = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备ID 数组"}];
}
/*message DeleteDeviceResponse { 

}*/
message GetDeviceRequest { 
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备ID"}];
}
message GetDeviceResponse {
    api.core.v1.EntityResponse deviceObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备对象"}];
}
message ListDeviceRequest {
    ListEntityQuery listEntityQuery = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备列表请求信息"}];
}
message ListDeviceResponse { 
    api.core.v1.ListEntityResponse listDeviceObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备列表对象"}];
}

message EnableDeviceRequest {
  Enable enable = 1;
  string id = 2;
}
/*message EnableDeviceResponse { 

}*/

message AddDeviceExtRequest {
  string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备ID"}];
  google.protobuf.Value ext = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备扩展属性KV"}];
}
/*message AddDeviceExtResponse { 

}*/

message DeleteDeviceExtRequest {
  Keys keys = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备扩展属性Key 数组"}];
  string id = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备ID"}];
}
/*message DeleteDeviceExtResponse { 

  }*/

message UpdateDeviceExtRequest {
  string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备ID"}];
  google.protobuf.Value ext = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备扩展属性KV"}];
}
/*message UpdateDeviceExtResponse { 

}*/


// device to core
message DeviceEntityCoreInfo {
  DeviceEntityBasicInfo basicInfo = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备信息"}];
  DeviceEntitySysField sysField = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备系统信息"}];
  //DeviceEntityConnectInfo connectInfo = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备连接信息"}];
  //google.protobuf.Value rawData = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备原始数据"}];
  //google.protobuf.Value attributes = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备属性数据"}];
  //google.protobuf.Value telemetry = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备遥测数据"}];
  //google.protobuf.Value commands = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备命令"}];
  //google.protobuf.Value relations = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备数据关系"}];
}

//------------------------------------------------------------------------------
// Basic data types
//------------------------------------------------------------------------------
message DeviceEntityBasicInfo {
  string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备名称"}];
  string desc = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备描述"}];
  string group = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备组ID"}];
  
  bool directConnection = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备是否直连"}];
  string templateId = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备模板ID"}];
  bool selfLearn = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备模板自学习"}];

  google.protobuf.Value ext = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备扩展配置"}];
}

// system fields
message DeviceEntitySysField {
  string _id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备ID"}];
  int64 _createdAt = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备创建时间"}];
  int64 _updatedAt = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备更新时间"}];
  bool _status = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备状态"}];
  bool _enable = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "查询输出字段"}];
  string _token = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备启/停"}];
  string _owner = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: " 所有者"}];
  string _source = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "来源"}];
}

// connectInfo 
message DeviceEntityConnectInfo {
  string _clientid = 11 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "客户端ID"}];
  string _username = 12 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "用户名"}];
  string _peerhost = 14 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "对端主机"}];
  int32 _sockport = 15 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "端口"}];
  string _protocol = 16 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "连接协议"}];
}

message ListEntityQuery {
    string query = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "es查询条件"}];
    Filter filter = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "限制"}];
}

message Filter {
  Page page = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "分页"}];

  repeated Condition condition = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "组合条件"}];
}

message Page {
  uint32 offset = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "记录开始位置"}];
  uint32 limit = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "每页限制条数"}];
  string sort = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "排序字段"}];
  bool reverse = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "是否逆序， false：不逆序，true:逆序"}];
}

message Condition {
  string field = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "查询输出字段"}];
  string value = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "值"}];
  string operator = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "操作符, $eq为相等，$neq为不等，$lt为小于，$gt为大于，$lne为小于等于， $gne为大于等于"}];
}

message Ids { repeated string ids = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "id 字符串数组"}]; }

message Keys { repeated string keys = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "key 字符串数组"}]; }

message Ext {
  string key = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "扩展配置key"}];
  string value = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "扩展配置value"}];
}

message Enable { bool enable = 1; }

