// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/device/v1/device.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v1 "github.com/tkeel-io/core/api/core/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of tkeel-io/core/api/v1/entity.proto.

type EntityResponse = v1.EntityResponse
type ListEntityResponse = v1.ListEntityResponse
type MapperDesc = v1.MapperDesc

// user to device
type CreateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevBasicInfo *DeviceEntityBasicInfo `protobuf:"bytes,1,opt,name=devBasicInfo,proto3" json:"devBasicInfo,"`
}

func (x *CreateDeviceRequest) Reset() {
	*x = CreateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceRequest) ProtoMessage() {}

func (x *CreateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDeviceRequest) GetDevBasicInfo() *DeviceEntityBasicInfo {
	if x != nil {
		return x.DevBasicInfo
	}
	return nil
}

type CreateDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceObject *v1.EntityResponse `protobuf:"bytes,1,opt,name=deviceObject,proto3" json:"deviceObject,"`
}

func (x *CreateDeviceResponse) Reset() {
	*x = CreateDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceResponse) ProtoMessage() {}

func (x *CreateDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceResponse.ProtoReflect.Descriptor instead.
func (*CreateDeviceResponse) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDeviceResponse) GetDeviceObject() *v1.EntityResponse {
	if x != nil {
		return x.DeviceObject
	}
	return nil
}

type UpdateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,"`
	DevBasicInfo *DeviceEntityBasicInfo `protobuf:"bytes,2,opt,name=devBasicInfo,proto3" json:"devBasicInfo,"`
}

func (x *UpdateDeviceRequest) Reset() {
	*x = UpdateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceRequest) ProtoMessage() {}

func (x *UpdateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDeviceRequest) GetDevBasicInfo() *DeviceEntityBasicInfo {
	if x != nil {
		return x.DevBasicInfo
	}
	return nil
}

type UpdateDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceObject *v1.EntityResponse `protobuf:"bytes,1,opt,name=deviceObject,proto3" json:"deviceObject,"`
}

func (x *UpdateDeviceResponse) Reset() {
	*x = UpdateDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceResponse) ProtoMessage() {}

func (x *UpdateDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeviceResponse) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDeviceResponse) GetDeviceObject() *v1.EntityResponse {
	if x != nil {
		return x.DeviceObject
	}
	return nil
}

type DeleteDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids *Ids `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,"`
}

func (x *DeleteDeviceRequest) Reset() {
	*x = DeleteDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceRequest) ProtoMessage() {}

func (x *DeleteDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteDeviceRequest) GetIds() *Ids {
	if x != nil {
		return x.Ids
	}
	return nil
}

//message DeleteDeviceResponse {
//
//}
type GetDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,"`
}

func (x *GetDeviceRequest) Reset() {
	*x = GetDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceRequest) ProtoMessage() {}

func (x *GetDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{5}
}

func (x *GetDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceObject *v1.EntityResponse `protobuf:"bytes,1,opt,name=deviceObject,proto3" json:"deviceObject,"`
}

func (x *GetDeviceResponse) Reset() {
	*x = GetDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceResponse) ProtoMessage() {}

func (x *GetDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{6}
}

func (x *GetDeviceResponse) GetDeviceObject() *v1.EntityResponse {
	if x != nil {
		return x.DeviceObject
	}
	return nil
}

type ListDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListEntityQuery *ListEntityQuery `protobuf:"bytes,1,opt,name=listEntityQuery,proto3" json:"listEntityQuery,"`
}

func (x *ListDeviceRequest) Reset() {
	*x = ListDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceRequest) ProtoMessage() {}

func (x *ListDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceRequest.ProtoReflect.Descriptor instead.
func (*ListDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{7}
}

func (x *ListDeviceRequest) GetListEntityQuery() *ListEntityQuery {
	if x != nil {
		return x.ListEntityQuery
	}
	return nil
}

type ListDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListDeviceObject *v1.ListEntityResponse `protobuf:"bytes,1,opt,name=listDeviceObject,proto3" json:"listDeviceObject,"`
}

func (x *ListDeviceResponse) Reset() {
	*x = ListDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceResponse) ProtoMessage() {}

func (x *ListDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceResponse.ProtoReflect.Descriptor instead.
func (*ListDeviceResponse) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{8}
}

func (x *ListDeviceResponse) GetListDeviceObject() *v1.ListEntityResponse {
	if x != nil {
		return x.ListDeviceObject
	}
	return nil
}

type EnableDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable *Enable `protobuf:"bytes,1,opt,name=enable,proto3" json:"enable,"`
	Id     string  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,"`
}

func (x *EnableDeviceRequest) Reset() {
	*x = EnableDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableDeviceRequest) ProtoMessage() {}

func (x *EnableDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableDeviceRequest.ProtoReflect.Descriptor instead.
func (*EnableDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{9}
}

func (x *EnableDeviceRequest) GetEnable() *Enable {
	if x != nil {
		return x.Enable
	}
	return nil
}

func (x *EnableDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddDeviceExtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,"`
	Ext *structpb.Value `protobuf:"bytes,2,opt,name=ext,proto3" json:"ext,"`
}

func (x *AddDeviceExtRequest) Reset() {
	*x = AddDeviceExtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeviceExtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeviceExtRequest) ProtoMessage() {}

func (x *AddDeviceExtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeviceExtRequest.ProtoReflect.Descriptor instead.
func (*AddDeviceExtRequest) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{10}
}

func (x *AddDeviceExtRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddDeviceExtRequest) GetExt() *structpb.Value {
	if x != nil {
		return x.Ext
	}
	return nil
}

type DeleteDeviceExtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys *Keys  `protobuf:"bytes,1,opt,name=keys,proto3" json:"keys,"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,"`
}

func (x *DeleteDeviceExtRequest) Reset() {
	*x = DeleteDeviceExtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceExtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceExtRequest) ProtoMessage() {}

func (x *DeleteDeviceExtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceExtRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceExtRequest) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteDeviceExtRequest) GetKeys() *Keys {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *DeleteDeviceExtRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateDeviceExtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,"`
	Ext *structpb.Value `protobuf:"bytes,2,opt,name=ext,proto3" json:"ext,"`
}

func (x *UpdateDeviceExtRequest) Reset() {
	*x = UpdateDeviceExtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceExtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceExtRequest) ProtoMessage() {}

func (x *UpdateDeviceExtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceExtRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceExtRequest) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateDeviceExtRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDeviceExtRequest) GetExt() *structpb.Value {
	if x != nil {
		return x.Ext
	}
	return nil
}

// device to core
type DeviceEntityCoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicInfo *DeviceEntityBasicInfo `protobuf:"bytes,1,opt,name=basicInfo,proto3" json:"basicInfo,"`
	SysField  *DeviceEntitySysField  `protobuf:"bytes,2,opt,name=sysField,proto3" json:"sysField,"`
}

func (x *DeviceEntityCoreInfo) Reset() {
	*x = DeviceEntityCoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceEntityCoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEntityCoreInfo) ProtoMessage() {}

func (x *DeviceEntityCoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceEntityCoreInfo.ProtoReflect.Descriptor instead.
func (*DeviceEntityCoreInfo) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{13}
}

func (x *DeviceEntityCoreInfo) GetBasicInfo() *DeviceEntityBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *DeviceEntityCoreInfo) GetSysField() *DeviceEntitySysField {
	if x != nil {
		return x.SysField
	}
	return nil
}

//------------------------------------------------------------------------------
// Basic data types
//------------------------------------------------------------------------------
type DeviceEntityBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,"`
	Description      string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,"`
	ParentId         string          `protobuf:"bytes,3,opt,name=parentId,proto3" json:"parentId,"`
	DirectConnection bool            `protobuf:"varint,4,opt,name=directConnection,proto3" json:"directConnection,"`
	TemplateId       string          `protobuf:"bytes,5,opt,name=templateId,proto3" json:"templateId,"`
	SelfLearn        bool            `protobuf:"varint,6,opt,name=selfLearn,proto3" json:"selfLearn,"`
	Ext              *structpb.Value `protobuf:"bytes,7,opt,name=ext,proto3" json:"ext,"`
}

func (x *DeviceEntityBasicInfo) Reset() {
	*x = DeviceEntityBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceEntityBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEntityBasicInfo) ProtoMessage() {}

func (x *DeviceEntityBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceEntityBasicInfo.ProtoReflect.Descriptor instead.
func (*DeviceEntityBasicInfo) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{14}
}

func (x *DeviceEntityBasicInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceEntityBasicInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DeviceEntityBasicInfo) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *DeviceEntityBasicInfo) GetDirectConnection() bool {
	if x != nil {
		return x.DirectConnection
	}
	return false
}

func (x *DeviceEntityBasicInfo) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *DeviceEntityBasicInfo) GetSelfLearn() bool {
	if x != nil {
		return x.SelfLearn
	}
	return false
}

func (x *DeviceEntityBasicInfo) GetExt() *structpb.Value {
	if x != nil {
		return x.Ext
	}
	return nil
}

// system fields
type DeviceEntitySysField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId        string `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,"`
	XCreatedAt int64  `protobuf:"varint,2,opt,name=_createdAt,json=CreatedAt,proto3" json:"_createdAt,"`
	XUpdatedAt int64  `protobuf:"varint,3,opt,name=_updatedAt,json=UpdatedAt,proto3" json:"_updatedAt,"`
	XStatus    string `protobuf:"bytes,4,opt,name=_status,json=Status,proto3" json:"_status,"`
	XEnable    bool   `protobuf:"varint,5,opt,name=_enable,json=Enable,proto3" json:"_enable,"`
	XToken     string `protobuf:"bytes,6,opt,name=_token,json=Token,proto3" json:"_token,"`
	XOwner     string `protobuf:"bytes,7,opt,name=_owner,json=Owner,proto3" json:"_owner,"`
	XSource    string `protobuf:"bytes,8,opt,name=_source,json=Source,proto3" json:"_source,"`
	XSpacePath string `protobuf:"bytes,9,opt,name=_spacePath,json=SpacePath,proto3" json:"_spacePath,"`
}

func (x *DeviceEntitySysField) Reset() {
	*x = DeviceEntitySysField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceEntitySysField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEntitySysField) ProtoMessage() {}

func (x *DeviceEntitySysField) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceEntitySysField.ProtoReflect.Descriptor instead.
func (*DeviceEntitySysField) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{15}
}

func (x *DeviceEntitySysField) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *DeviceEntitySysField) GetXCreatedAt() int64 {
	if x != nil {
		return x.XCreatedAt
	}
	return 0
}

func (x *DeviceEntitySysField) GetXUpdatedAt() int64 {
	if x != nil {
		return x.XUpdatedAt
	}
	return 0
}

func (x *DeviceEntitySysField) GetXStatus() string {
	if x != nil {
		return x.XStatus
	}
	return ""
}

func (x *DeviceEntitySysField) GetXEnable() bool {
	if x != nil {
		return x.XEnable
	}
	return false
}

func (x *DeviceEntitySysField) GetXToken() string {
	if x != nil {
		return x.XToken
	}
	return ""
}

func (x *DeviceEntitySysField) GetXOwner() string {
	if x != nil {
		return x.XOwner
	}
	return ""
}

func (x *DeviceEntitySysField) GetXSource() string {
	if x != nil {
		return x.XSource
	}
	return ""
}

func (x *DeviceEntitySysField) GetXSpacePath() string {
	if x != nil {
		return x.XSpacePath
	}
	return ""
}

// connectInfo
type DeviceEntityConnectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XClientId string `protobuf:"bytes,11,opt,name=_clientId,json=ClientId,proto3" json:"_clientId,"`
	XUserName string `protobuf:"bytes,12,opt,name=_userName,json=UserName,proto3" json:"_userName,"`
	XPeerHost string `protobuf:"bytes,14,opt,name=_peerHost,json=PeerHost,proto3" json:"_peerHost,"`
	XSockPort int32  `protobuf:"varint,15,opt,name=_sockPort,json=SockPort,proto3" json:"_sockPort,"`
	XProtocol string `protobuf:"bytes,16,opt,name=_protocol,json=Protocol,proto3" json:"_protocol,"`
}

func (x *DeviceEntityConnectInfo) Reset() {
	*x = DeviceEntityConnectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceEntityConnectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEntityConnectInfo) ProtoMessage() {}

func (x *DeviceEntityConnectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceEntityConnectInfo.ProtoReflect.Descriptor instead.
func (*DeviceEntityConnectInfo) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{16}
}

func (x *DeviceEntityConnectInfo) GetXClientId() string {
	if x != nil {
		return x.XClientId
	}
	return ""
}

func (x *DeviceEntityConnectInfo) GetXUserName() string {
	if x != nil {
		return x.XUserName
	}
	return ""
}

func (x *DeviceEntityConnectInfo) GetXPeerHost() string {
	if x != nil {
		return x.XPeerHost
	}
	return ""
}

func (x *DeviceEntityConnectInfo) GetXSockPort() int32 {
	if x != nil {
		return x.XSockPort
	}
	return 0
}

func (x *DeviceEntityConnectInfo) GetXProtocol() string {
	if x != nil {
		return x.XProtocol
	}
	return ""
}

type ListEntityQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,"`
	//Filter filter = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "限制"}];
	Page      *Page        `protobuf:"bytes,2,opt,name=page,proto3" json:"page,"`
	Condition []*Condition `protobuf:"bytes,3,rep,name=condition,proto3" json:"condition,"`
}

func (x *ListEntityQuery) Reset() {
	*x = ListEntityQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEntityQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntityQuery) ProtoMessage() {}

func (x *ListEntityQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntityQuery.ProtoReflect.Descriptor instead.
func (*ListEntityQuery) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{17}
}

func (x *ListEntityQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListEntityQuery) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListEntityQuery) GetCondition() []*Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *Page        `protobuf:"bytes,1,opt,name=page,proto3" json:"page,"`
	Condition []*Condition `protobuf:"bytes,2,rep,name=condition,proto3" json:"condition,"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{18}
}

func (x *Filter) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *Filter) GetCondition() []*Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset  uint32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,"`
	Limit   uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,"`
	Sort    string `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,"`
	Reverse bool   `protobuf:"varint,4,opt,name=reverse,proto3" json:"reverse,"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{19}
}

func (x *Page) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Page) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Page) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *Page) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,"`
	Operator string `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{20}
}

func (x *Condition) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Condition) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Condition) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type Ids struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,"`
}

func (x *Ids) Reset() {
	*x = Ids{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ids) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ids) ProtoMessage() {}

func (x *Ids) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ids.ProtoReflect.Descriptor instead.
func (*Ids) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{21}
}

func (x *Ids) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Keys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,"`
}

func (x *Keys) Reset() {
	*x = Keys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keys) ProtoMessage() {}

func (x *Keys) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keys.ProtoReflect.Descriptor instead.
func (*Keys) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{22}
}

func (x *Keys) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type Ext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,"`
}

func (x *Ext) Reset() {
	*x = Ext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ext) ProtoMessage() {}

func (x *Ext) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ext.ProtoReflect.Descriptor instead.
func (*Ext) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{23}
}

func (x *Ext) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Ext) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Enable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,"`
}

func (x *Enable) Reset() {
	*x = Enable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v1_device_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enable) ProtoMessage() {}

func (x *Enable) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v1_device_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enable.ProtoReflect.Descriptor instead.
func (*Enable) Descriptor() ([]byte, []int) {
	return file_api_device_v1_device_proto_rawDescGZIP(), []int{24}
}

func (x *Enable) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

var File_api_device_v1_device_proto protoreflect.FileDescriptor

var file_api_device_v1_device_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2d, 0x69, 0x6f, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b,
	0x0a, 0x0c, 0x64, 0x65, 0x76, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32,
	0x0c, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x0c, 0x64,
	0x65, 0x76, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6a, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xbe,
	0xe5, 0xa4, 0x87, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a,
	0x32, 0x08, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5b,
	0x0a, 0x0c, 0x64, 0x65, 0x76, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32,
	0x0c, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x0c, 0x64,
	0x65, 0x76, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6a, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xbe,
	0xe5, 0xa4, 0x87, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x51, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x73, 0x42,
	0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0x49, 0x44, 0x20, 0xe6,
	0x95, 0xb0, 0xe7, 0xbb, 0x84, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32,
	0x08, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x67, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xbe, 0xe5,
	0xa4, 0x87, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x7c, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x0f, 0x6c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x32, 0x18, 0xe8, 0xae, 0xbe, 0xe5, 0xa4,
	0x87, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe4, 0xbf, 0xa1,
	0xe6, 0x81, 0xaf, 0x52, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x7a, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x10, 0x6c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe8, 0xae, 0xbe, 0xe5,
	0xa4, 0x87, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0x52, 0x10,
	0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x54, 0x0a, 0x13, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08,
	0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x19, 0x92, 0x41, 0x16, 0x32, 0x14, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe6, 0x89,
	0xa9, 0xe5, 0xb1, 0x95, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0x4b, 0x56, 0x52, 0x03, 0x65, 0x78,
	0x74, 0x22, 0x83, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x45, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x42,
	0x21, 0x92, 0x41, 0x1e, 0x32, 0x1c, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe6, 0x89, 0xa9, 0xe5,
	0xb1, 0x95, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0x4b, 0x65, 0x79, 0x20, 0xe6, 0x95, 0xb0, 0xe7,
	0xbb, 0x84, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xbe, 0xe5, 0xa4,
	0x87, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92,
	0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x43, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x19, 0x92, 0x41, 0x16, 0x32, 0x14, 0xe8, 0xae, 0xbe, 0xe5,
	0xa4, 0x87, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0x4b, 0x56,
	0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x55,
	0x0a, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae,
	0xbe, 0xe5, 0xa4, 0x87, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x58, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x53, 0x79, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x17, 0x92, 0x41,
	0x14, 0x32, 0x12, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xb3, 0xbb, 0xe7, 0xbb, 0x9f, 0xe4,
	0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x08, 0x73, 0x79, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22,
	0x98, 0x03, 0x0a, 0x15, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae,
	0xbe, 0xe5, 0xa4, 0x87, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xbe, 0xe5,
	0xa4, 0x87, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0xe8, 0xae,
	0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0x49, 0x44, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x10, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x17, 0x92,
	0x41, 0x14, 0x32, 0x12, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6,
	0xe7, 0x9b, 0xb4, 0xe8, 0xbf, 0x9e, 0x52, 0x10, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41,
	0x10, 0x32, 0x0e, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49,
	0x44, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x09, 0x73, 0x65, 0x6c, 0x66, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x1a, 0x92, 0x41, 0x17, 0x32, 0x15, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe6, 0xa8, 0xa1,
	0xe6, 0x9d, 0xbf, 0xe8, 0x87, 0xaa, 0xe5, 0xad, 0xa6, 0xe4, 0xb9, 0xa0, 0x52, 0x09, 0x73, 0x65,
	0x6c, 0x66, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x12, 0x41, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x17, 0x92, 0x41,
	0x14, 0x32, 0x12, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe9,
	0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0xb2, 0x03, 0x0a, 0x14, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x79, 0x73, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0x49, 0x44, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe8, 0xae,
	0xbe, 0xe5, 0xa4, 0x87, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe6, 0x9b, 0xb4, 0xe6,
	0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xbe, 0xe5, 0xa4,
	0x87, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x30, 0x0a, 0x07, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe8, 0xbe, 0x93,
	0xe5, 0x87, 0xba, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0x52, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x12, 0x92, 0x41, 0x0f, 0x32, 0x0d, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe5, 0x90,
	0xaf, 0x2f, 0xe5, 0x81, 0x9c, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x06,
	0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0x92, 0x41,
	0x0c, 0x32, 0x0a, 0x20, 0xe6, 0x89, 0x80, 0xe6, 0x9c, 0x89, 0xe8, 0x80, 0x85, 0x52, 0x05, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x07, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe6, 0x9d, 0xa5, 0xe6,
	0xba, 0x90, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0x92, 0x41, 0x11, 0x32, 0x0f, 0xe7, 0xa9, 0xba, 0xe9, 0x97, 0xb4, 0xe6, 0xa0, 0x91, 0xe8, 0xb7,
	0xaf, 0xe5, 0xbe, 0x84, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22,
	0xff, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x09, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10,
	0x92, 0x41, 0x0d, 0x32, 0x0b, 0xe5, 0xae, 0xa2, 0xe6, 0x88, 0xb7, 0xe7, 0xab, 0xaf, 0x49, 0x44,
	0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92,
	0x41, 0x0b, 0x32, 0x09, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x90, 0x8d, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x5f, 0x70, 0x65, 0x65, 0x72,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32,
	0x0c, 0xe5, 0xaf, 0xb9, 0xe7, 0xab, 0xaf, 0xe4, 0xb8, 0xbb, 0xe6, 0x9c, 0xba, 0x52, 0x08, 0x50,
	0x65, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x5f, 0x73, 0x6f, 0x63, 0x6b,
	0x50, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32,
	0x06, 0xe7, 0xab, 0xaf, 0xe5, 0x8f, 0xa3, 0x52, 0x08, 0x53, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x2e, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xbf, 0x9e, 0xe6, 0x8e,
	0xa5, 0xe5, 0x8d, 0x8f, 0xe8, 0xae, 0xae, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x22, 0xbd, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32, 0x0e, 0x65, 0x73, 0xe6, 0x9f, 0xa5,
	0xe8, 0xaf, 0xa2, 0xe6, 0x9d, 0xa1, 0xe4, 0xbb, 0xb6, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x34, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe5, 0x88, 0x86, 0xe9, 0xa1, 0xb5,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe7, 0xbb, 0x84, 0xe5, 0x90, 0x88,
	0xe6, 0x9d, 0xa1, 0xe4, 0xbb, 0xb6, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x89, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x42,
	0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe5, 0x88, 0x86, 0xe9, 0xa1, 0xb5, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x49, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe7, 0xbb, 0x84, 0xe5, 0x90, 0x88, 0xe6, 0x9d, 0xa1, 0xe4,
	0xbb, 0xb6, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdd, 0x01,
	0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe8, 0xae, 0xb0,
	0xe5, 0xbd, 0x95, 0xe5, 0xbc, 0x80, 0xe5, 0xa7, 0x8b, 0xe4, 0xbd, 0x8d, 0xe7, 0xbd, 0xae, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe6, 0xaf, 0x8f,
	0xe9, 0xa1, 0xb5, 0xe9, 0x99, 0x90, 0xe5, 0x88, 0xb6, 0xe6, 0x9d, 0xa1, 0xe6, 0x95, 0xb0, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x8e, 0x92, 0xe5, 0xba,
	0x8f, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x4e, 0x0a,
	0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x34,
	0x92, 0x41, 0x31, 0x32, 0x2f, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe9, 0x80, 0x86, 0xe5, 0xba,
	0x8f, 0xef, 0xbc, 0x8c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xef, 0xbc, 0x9a, 0xe4, 0xb8, 0x8d,
	0xe9, 0x80, 0x86, 0xe5, 0xba, 0x8f, 0xef, 0xbc, 0x8c, 0x74, 0x72, 0x75, 0x65, 0x3a, 0xe9, 0x80,
	0x86, 0xe5, 0xba, 0x8f, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x22, 0xf0, 0x01,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32,
	0x12, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe8, 0xbe, 0x93, 0xe5, 0x87, 0xba, 0xe5, 0xad, 0x97,
	0xe6, 0xae, 0xb5, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x92, 0x41, 0x05, 0x32, 0x03,
	0xe5, 0x80, 0xbc, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x77, 0x92,
	0x41, 0x74, 0x32, 0x72, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe7, 0xac, 0xa6, 0x2c, 0x20, 0x24,
	0x65, 0x71, 0xe4, 0xb8, 0xba, 0xe7, 0x9b, 0xb8, 0xe7, 0xad, 0x89, 0xef, 0xbc, 0x8c, 0x24, 0x6e,
	0x65, 0x71, 0xe4, 0xb8, 0xba, 0xe4, 0xb8, 0x8d, 0xe7, 0xad, 0x89, 0xef, 0xbc, 0x8c, 0x24, 0x6c,
	0x74, 0xe4, 0xb8, 0xba, 0xe5, 0xb0, 0x8f, 0xe4, 0xba, 0x8e, 0xef, 0xbc, 0x8c, 0x24, 0x67, 0x74,
	0xe4, 0xb8, 0xba, 0xe5, 0xa4, 0xa7, 0xe4, 0xba, 0x8e, 0xef, 0xbc, 0x8c, 0x24, 0x6c, 0x6e, 0x65,
	0xe4, 0xb8, 0xba, 0xe5, 0xb0, 0x8f, 0xe4, 0xba, 0x8e, 0xe7, 0xad, 0x89, 0xe4, 0xba, 0x8e, 0xef,
	0xbc, 0x8c, 0x20, 0x24, 0x67, 0x6e, 0x65, 0xe4, 0xb8, 0xba, 0xe5, 0xa4, 0xa7, 0xe4, 0xba, 0x8e,
	0xe7, 0xad, 0x89, 0xe4, 0xba, 0x8e, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0x30, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0x69, 0x64, 0x20, 0xe5, 0xad,
	0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb8, 0xb2, 0xe6, 0x95, 0xb0, 0xe7, 0xbb, 0x84, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x34, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2c, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x18, 0x92, 0x41, 0x15, 0x32, 0x13, 0x6b,
	0x65, 0x79, 0x20, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb8, 0xb2, 0xe6, 0x95, 0xb0, 0xe7,
	0xbb, 0x84, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x5b, 0x0a, 0x03, 0x45, 0x78, 0x74, 0x12,
	0x26, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41,
	0x11, 0x32, 0x0f, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x6b,
	0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x13, 0x32, 0x11, 0xe6, 0x89, 0xa9,
	0xe5, 0xb1, 0x95, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x20, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x87, 0x0b, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xb3, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x22, 0x08, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x0c,
	0x64, 0x65, 0x76, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x92, 0x41, 0x39, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32,
	0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xb8, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x5f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x1a, 0x0d, 0x2f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x0c, 0x64, 0x65, 0x76, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x92, 0x41, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a,
	0x02, 0x4f, 0x4b, 0x12, 0xa4, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x0f, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x03, 0x69, 0x64, 0x73, 0x92, 0x41,
	0x39, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x0b, 0x0a,
	0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0x9b, 0x01, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x92, 0x41, 0x33, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x11, 0x67,
	0x65, 0x74, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32,
	0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xab, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x22, 0x07, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x0f, 0x6c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x92, 0x41,
	0x35, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x20,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30,
	0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xa7, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x45, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x5b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x11, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x78, 0x74, 0x3a, 0x03,
	0x65, 0x78, 0x74, 0x92, 0x41, 0x3a, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x15,
	0x61, 0x64, 0x64, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x0c, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x45, 0x78, 0x74, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b,
	0x12, 0xb8, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x45, 0x78, 0x74, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x45, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x66, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x18, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x78, 0x74, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x92, 0x41, 0x3d, 0x0a, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2a, 0x0c, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x4a, 0x0b,
	0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xb3, 0x01, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x12,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x61,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x1a, 0x11, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x78, 0x74, 0x3a, 0x03, 0x65, 0x78, 0x74, 0x92, 0x41,
	0x40, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x45, 0x78, 0x74, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f,
	0x4b, 0x42, 0x44, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2d, 0x69, 0x6f, 0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2d,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x50, 0x03, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_device_v1_device_proto_rawDescOnce sync.Once
	file_api_device_v1_device_proto_rawDescData = file_api_device_v1_device_proto_rawDesc
)

func file_api_device_v1_device_proto_rawDescGZIP() []byte {
	file_api_device_v1_device_proto_rawDescOnce.Do(func() {
		file_api_device_v1_device_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_device_v1_device_proto_rawDescData)
	})
	return file_api_device_v1_device_proto_rawDescData
}

var file_api_device_v1_device_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_api_device_v1_device_proto_goTypes = []interface{}{
	(*CreateDeviceRequest)(nil),     // 0: api.device.v1.CreateDeviceRequest
	(*CreateDeviceResponse)(nil),    // 1: api.device.v1.CreateDeviceResponse
	(*UpdateDeviceRequest)(nil),     // 2: api.device.v1.UpdateDeviceRequest
	(*UpdateDeviceResponse)(nil),    // 3: api.device.v1.UpdateDeviceResponse
	(*DeleteDeviceRequest)(nil),     // 4: api.device.v1.DeleteDeviceRequest
	(*GetDeviceRequest)(nil),        // 5: api.device.v1.GetDeviceRequest
	(*GetDeviceResponse)(nil),       // 6: api.device.v1.GetDeviceResponse
	(*ListDeviceRequest)(nil),       // 7: api.device.v1.ListDeviceRequest
	(*ListDeviceResponse)(nil),      // 8: api.device.v1.ListDeviceResponse
	(*EnableDeviceRequest)(nil),     // 9: api.device.v1.EnableDeviceRequest
	(*AddDeviceExtRequest)(nil),     // 10: api.device.v1.AddDeviceExtRequest
	(*DeleteDeviceExtRequest)(nil),  // 11: api.device.v1.DeleteDeviceExtRequest
	(*UpdateDeviceExtRequest)(nil),  // 12: api.device.v1.UpdateDeviceExtRequest
	(*DeviceEntityCoreInfo)(nil),    // 13: api.device.v1.DeviceEntityCoreInfo
	(*DeviceEntityBasicInfo)(nil),   // 14: api.device.v1.DeviceEntityBasicInfo
	(*DeviceEntitySysField)(nil),    // 15: api.device.v1.DeviceEntitySysField
	(*DeviceEntityConnectInfo)(nil), // 16: api.device.v1.DeviceEntityConnectInfo
	(*ListEntityQuery)(nil),         // 17: api.device.v1.ListEntityQuery
	(*Filter)(nil),                  // 18: api.device.v1.Filter
	(*Page)(nil),                    // 19: api.device.v1.Page
	(*Condition)(nil),               // 20: api.device.v1.Condition
	(*Ids)(nil),                     // 21: api.device.v1.Ids
	(*Keys)(nil),                    // 22: api.device.v1.Keys
	(*Ext)(nil),                     // 23: api.device.v1.Ext
	(*Enable)(nil),                  // 24: api.device.v1.Enable
	(*v1.EntityResponse)(nil),       // 25: api.core.v1.EntityResponse
	(*v1.ListEntityResponse)(nil),   // 26: api.core.v1.ListEntityResponse
	(*structpb.Value)(nil),          // 27: google.protobuf.Value
	(*emptypb.Empty)(nil),           // 28: google.protobuf.Empty
}
var file_api_device_v1_device_proto_depIdxs = []int32{
	14, // 0: api.device.v1.CreateDeviceRequest.devBasicInfo:type_name -> api.device.v1.DeviceEntityBasicInfo
	25, // 1: api.device.v1.CreateDeviceResponse.deviceObject:type_name -> api.core.v1.EntityResponse
	14, // 2: api.device.v1.UpdateDeviceRequest.devBasicInfo:type_name -> api.device.v1.DeviceEntityBasicInfo
	25, // 3: api.device.v1.UpdateDeviceResponse.deviceObject:type_name -> api.core.v1.EntityResponse
	21, // 4: api.device.v1.DeleteDeviceRequest.ids:type_name -> api.device.v1.Ids
	25, // 5: api.device.v1.GetDeviceResponse.deviceObject:type_name -> api.core.v1.EntityResponse
	17, // 6: api.device.v1.ListDeviceRequest.listEntityQuery:type_name -> api.device.v1.ListEntityQuery
	26, // 7: api.device.v1.ListDeviceResponse.listDeviceObject:type_name -> api.core.v1.ListEntityResponse
	24, // 8: api.device.v1.EnableDeviceRequest.enable:type_name -> api.device.v1.Enable
	27, // 9: api.device.v1.AddDeviceExtRequest.ext:type_name -> google.protobuf.Value
	22, // 10: api.device.v1.DeleteDeviceExtRequest.keys:type_name -> api.device.v1.Keys
	27, // 11: api.device.v1.UpdateDeviceExtRequest.ext:type_name -> google.protobuf.Value
	14, // 12: api.device.v1.DeviceEntityCoreInfo.basicInfo:type_name -> api.device.v1.DeviceEntityBasicInfo
	15, // 13: api.device.v1.DeviceEntityCoreInfo.sysField:type_name -> api.device.v1.DeviceEntitySysField
	27, // 14: api.device.v1.DeviceEntityBasicInfo.ext:type_name -> google.protobuf.Value
	19, // 15: api.device.v1.ListEntityQuery.page:type_name -> api.device.v1.Page
	20, // 16: api.device.v1.ListEntityQuery.condition:type_name -> api.device.v1.Condition
	19, // 17: api.device.v1.Filter.page:type_name -> api.device.v1.Page
	20, // 18: api.device.v1.Filter.condition:type_name -> api.device.v1.Condition
	0,  // 19: api.device.v1.Device.CreateDevice:input_type -> api.device.v1.CreateDeviceRequest
	2,  // 20: api.device.v1.Device.UpdateDevice:input_type -> api.device.v1.UpdateDeviceRequest
	4,  // 21: api.device.v1.Device.DeleteDevice:input_type -> api.device.v1.DeleteDeviceRequest
	5,  // 22: api.device.v1.Device.GetDevice:input_type -> api.device.v1.GetDeviceRequest
	7,  // 23: api.device.v1.Device.ListDevice:input_type -> api.device.v1.ListDeviceRequest
	10, // 24: api.device.v1.Device.AddDeviceExt:input_type -> api.device.v1.AddDeviceExtRequest
	11, // 25: api.device.v1.Device.DeleteDeviceExt:input_type -> api.device.v1.DeleteDeviceExtRequest
	12, // 26: api.device.v1.Device.UpdateDeviceExt:input_type -> api.device.v1.UpdateDeviceExtRequest
	1,  // 27: api.device.v1.Device.CreateDevice:output_type -> api.device.v1.CreateDeviceResponse
	3,  // 28: api.device.v1.Device.UpdateDevice:output_type -> api.device.v1.UpdateDeviceResponse
	28, // 29: api.device.v1.Device.DeleteDevice:output_type -> google.protobuf.Empty
	6,  // 30: api.device.v1.Device.GetDevice:output_type -> api.device.v1.GetDeviceResponse
	8,  // 31: api.device.v1.Device.ListDevice:output_type -> api.device.v1.ListDeviceResponse
	28, // 32: api.device.v1.Device.AddDeviceExt:output_type -> google.protobuf.Empty
	28, // 33: api.device.v1.Device.DeleteDeviceExt:output_type -> google.protobuf.Empty
	28, // 34: api.device.v1.Device.UpdateDeviceExt:output_type -> google.protobuf.Empty
	27, // [27:35] is the sub-list for method output_type
	19, // [19:27] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_api_device_v1_device_proto_init() }
func file_api_device_v1_device_proto_init() {
	if File_api_device_v1_device_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_device_v1_device_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDeviceExtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceExtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceExtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceEntityCoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceEntityBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceEntitySysField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceEntityConnectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEntityQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ids); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v1_device_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_device_v1_device_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_device_v1_device_proto_goTypes,
		DependencyIndexes: file_api_device_v1_device_proto_depIdxs,
		MessageInfos:      file_api_device_v1_device_proto_msgTypes,
	}.Build()
	File_api_device_v1_device_proto = out.File
	file_api_device_v1_device_proto_rawDesc = nil
	file_api_device_v1_device_proto_goTypes = nil
	file_api_device_v1_device_proto_depIdxs = nil
}
