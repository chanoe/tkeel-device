// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/group/v1/group.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//user to device
type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *GroupEntity `protobuf:"bytes,1,opt,name=group,proto3" json:"group,"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{0}
}

func (x *CreateGroupRequest) GetGroup() *GroupEntity {
	if x != nil {
		return x.Group
	}
	return nil
}

type UpdateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,"`
	Group *GroupEntity `protobuf:"bytes,2,opt,name=group,proto3" json:"group,"`
}

func (x *UpdateGroupRequest) Reset() {
	*x = UpdateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupRequest) ProtoMessage() {}

func (x *UpdateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateGroupRequest) GetGroup() *GroupEntity {
	if x != nil {
		return x.Group
	}
	return nil
}

type DeleteGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids *Ids `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,"`
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteGroupRequest) GetIds() *Ids {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,"`
}

func (x *GetGroupRequest) Reset() {
	*x = GetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequest) ProtoMessage() {}

func (x *GetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{3}
}

func (x *GetGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetGroupTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListEntityQuery *ListEntityQuery `protobuf:"bytes,1,opt,name=listEntityQuery,proto3" json:"listEntityQuery,"`
}

func (x *GetGroupTreeRequest) Reset() {
	*x = GetGroupTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupTreeRequest) ProtoMessage() {}

func (x *GetGroupTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupTreeRequest.ProtoReflect.Descriptor instead.
func (*GetGroupTreeRequest) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{4}
}

func (x *GetGroupTreeRequest) GetListEntityQuery() *ListEntityQuery {
	if x != nil {
		return x.ListEntityQuery
	}
	return nil
}

type ListGroupItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListEntityQuery *ListEntityQuery `protobuf:"bytes,1,opt,name=listEntityQuery,proto3" json:"listEntityQuery,"`
}

func (x *ListGroupItemsRequest) Reset() {
	*x = ListGroupItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupItemsRequest) ProtoMessage() {}

func (x *ListGroupItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupItemsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupItemsRequest) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{5}
}

func (x *ListGroupItemsRequest) GetListEntityQuery() *ListEntityQuery {
	if x != nil {
		return x.ListEntityQuery
	}
	return nil
}

type AddGroupExtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,"`
	Kvs *structpb.Value `protobuf:"bytes,2,opt,name=kvs,proto3" json:"kvs,"`
}

func (x *AddGroupExtRequest) Reset() {
	*x = AddGroupExtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupExtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupExtRequest) ProtoMessage() {}

func (x *AddGroupExtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupExtRequest.ProtoReflect.Descriptor instead.
func (*AddGroupExtRequest) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{6}
}

func (x *AddGroupExtRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddGroupExtRequest) GetKvs() *structpb.Value {
	if x != nil {
		return x.Kvs
	}
	return nil
}

type UpdateGroupExtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,"`
	Kvs *structpb.Value `protobuf:"bytes,2,opt,name=kvs,proto3" json:"kvs,"`
}

func (x *UpdateGroupExtRequest) Reset() {
	*x = UpdateGroupExtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupExtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupExtRequest) ProtoMessage() {}

func (x *UpdateGroupExtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupExtRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupExtRequest) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateGroupExtRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateGroupExtRequest) GetKvs() *structpb.Value {
	if x != nil {
		return x.Kvs
	}
	return nil
}

type DelGroupExtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys *Keys  `protobuf:"bytes,1,opt,name=keys,proto3" json:"keys,"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,"`
}

func (x *DelGroupExtRequest) Reset() {
	*x = DelGroupExtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelGroupExtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelGroupExtRequest) ProtoMessage() {}

func (x *DelGroupExtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelGroupExtRequest.ProtoReflect.Descriptor instead.
func (*DelGroupExtRequest) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{8}
}

func (x *DelGroupExtRequest) GetKeys() *Keys {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *DelGroupExtRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// device to core
type GroupEntityCoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    *GroupEntity         `protobuf:"bytes,1,opt,name=group,proto3" json:"group,"`
	SysField *GroupEntitySysField `protobuf:"bytes,3,opt,name=sysField,proto3" json:"sysField,"` //GroupEntitySubEntityIds subIds = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备组子设备信息"}];
}

func (x *GroupEntityCoreInfo) Reset() {
	*x = GroupEntityCoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupEntityCoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupEntityCoreInfo) ProtoMessage() {}

func (x *GroupEntityCoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupEntityCoreInfo.ProtoReflect.Descriptor instead.
func (*GroupEntityCoreInfo) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{9}
}

func (x *GroupEntityCoreInfo) GetGroup() *GroupEntity {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupEntityCoreInfo) GetSysField() *GroupEntitySysField {
	if x != nil {
		return x.SysField
	}
	return nil
}

type CreateGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//api.core.v1.EntityResponse groupObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备组信息"}];
	GroupObject *structpb.Value `protobuf:"bytes,1,opt,name=groupObject,proto3" json:"groupObject,"`
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{10}
}

func (x *CreateGroupResponse) GetGroupObject() *structpb.Value {
	if x != nil {
		return x.GroupObject
	}
	return nil
}

type UpdateGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//api.core.v1.EntityResponse groupObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备组信息"}];
	GroupObject *structpb.Value `protobuf:"bytes,1,opt,name=groupObject,proto3" json:"groupObject,"`
}

func (x *UpdateGroupResponse) Reset() {
	*x = UpdateGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupResponse) ProtoMessage() {}

func (x *UpdateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupResponse.ProtoReflect.Descriptor instead.
func (*UpdateGroupResponse) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateGroupResponse) GetGroupObject() *structpb.Value {
	if x != nil {
		return x.GroupObject
	}
	return nil
}

type GetGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//api.core.v1.EntityResponse groupObject = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "设备组信息"}];
	GroupObject *structpb.Value `protobuf:"bytes,1,opt,name=groupObject,proto3" json:"groupObject,"`
}

func (x *GetGroupResponse) Reset() {
	*x = GetGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupResponse) ProtoMessage() {}

func (x *GetGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupResponse.ProtoReflect.Descriptor instead.
func (*GetGroupResponse) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{12}
}

func (x *GetGroupResponse) GetGroupObject() *structpb.Value {
	if x != nil {
		return x.GroupObject
	}
	return nil
}

type GetGroupTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupTree *structpb.Value `protobuf:"bytes,1,opt,name=GroupTree,proto3" json:"GroupTree,"`
}

func (x *GetGroupTreeResponse) Reset() {
	*x = GetGroupTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupTreeResponse) ProtoMessage() {}

func (x *GetGroupTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupTreeResponse.ProtoReflect.Descriptor instead.
func (*GetGroupTreeResponse) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{13}
}

func (x *GetGroupTreeResponse) GetGroupTree() *structpb.Value {
	if x != nil {
		return x.GroupTree
	}
	return nil
}

type GroupEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,"`
	Description string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,"`
	ParentId    string          `protobuf:"bytes,3,opt,name=parentId,proto3" json:"parentId,"`
	ParentName  string          `protobuf:"bytes,4,opt,name=parentName,proto3" json:"parentName,"`
	Ext         *structpb.Value `protobuf:"bytes,5,opt,name=ext,proto3" json:"ext,"`
}

func (x *GroupEntity) Reset() {
	*x = GroupEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupEntity) ProtoMessage() {}

func (x *GroupEntity) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupEntity.ProtoReflect.Descriptor instead.
func (*GroupEntity) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{14}
}

func (x *GroupEntity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupEntity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GroupEntity) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *GroupEntity) GetParentName() string {
	if x != nil {
		return x.ParentName
	}
	return ""
}

func (x *GroupEntity) GetExt() *structpb.Value {
	if x != nil {
		return x.Ext
	}
	return nil
}

type GroupEntitySubEntityIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubEntityId map[string]string `protobuf:"bytes,1,rep,name=subEntityId,proto3" json:"subEntityId," protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GroupEntitySubEntityIds) Reset() {
	*x = GroupEntitySubEntityIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupEntitySubEntityIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupEntitySubEntityIds) ProtoMessage() {}

func (x *GroupEntitySubEntityIds) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupEntitySubEntityIds.ProtoReflect.Descriptor instead.
func (*GroupEntitySubEntityIds) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{15}
}

func (x *GroupEntitySubEntityIds) GetSubEntityId() map[string]string {
	if x != nil {
		return x.SubEntityId
	}
	return nil
}

type GroupEntitySysField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId        string `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,"`
	XCreatedAt int64  `protobuf:"varint,2,opt,name=_createdAt,json=CreatedAt,proto3" json:"_createdAt,"`
	XUpdatedAt int64  `protobuf:"varint,3,opt,name=_updatedAt,json=UpdatedAt,proto3" json:"_updatedAt,"`
	XOwner     string `protobuf:"bytes,4,opt,name=_owner,json=Owner,proto3" json:"_owner,"`
	XSource    string `protobuf:"bytes,5,opt,name=_source,json=Source,proto3" json:"_source,"`
	XSpacePath string `protobuf:"bytes,6,opt,name=_spacePath,json=SpacePath,proto3" json:"_spacePath,"`
}

func (x *GroupEntitySysField) Reset() {
	*x = GroupEntitySysField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupEntitySysField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupEntitySysField) ProtoMessage() {}

func (x *GroupEntitySysField) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupEntitySysField.ProtoReflect.Descriptor instead.
func (*GroupEntitySysField) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{16}
}

func (x *GroupEntitySysField) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *GroupEntitySysField) GetXCreatedAt() int64 {
	if x != nil {
		return x.XCreatedAt
	}
	return 0
}

func (x *GroupEntitySysField) GetXUpdatedAt() int64 {
	if x != nil {
		return x.XUpdatedAt
	}
	return 0
}

func (x *GroupEntitySysField) GetXOwner() string {
	if x != nil {
		return x.XOwner
	}
	return ""
}

func (x *GroupEntitySysField) GetXSource() string {
	if x != nil {
		return x.XSource
	}
	return ""
}

func (x *GroupEntitySysField) GetXSpacePath() string {
	if x != nil {
		return x.XSpacePath
	}
	return ""
}

type ListEntityQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum      int32        `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,"`
	PageSize     int32        `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,"`
	OrderBy      string       `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,"`
	IsDescending bool         `protobuf:"varint,4,opt,name=is_descending,json=isDescending,proto3" json:"is_descending,"`
	Query        string       `protobuf:"bytes,5,opt,name=query,proto3" json:"query,"`
	Condition    []*Condition `protobuf:"bytes,6,rep,name=condition,proto3" json:"condition,"`
}

func (x *ListEntityQuery) Reset() {
	*x = ListEntityQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEntityQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntityQuery) ProtoMessage() {}

func (x *ListEntityQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntityQuery.ProtoReflect.Descriptor instead.
func (*ListEntityQuery) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{17}
}

func (x *ListEntityQuery) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListEntityQuery) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEntityQuery) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListEntityQuery) GetIsDescending() bool {
	if x != nil {
		return x.IsDescending
	}
	return false
}

func (x *ListEntityQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListEntityQuery) GetCondition() []*Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,"`
	Operator string `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{18}
}

func (x *Condition) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Condition) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Condition) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type Ids struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,"`
}

func (x *Ids) Reset() {
	*x = Ids{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ids) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ids) ProtoMessage() {}

func (x *Ids) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ids.ProtoReflect.Descriptor instead.
func (*Ids) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{19}
}

func (x *Ids) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Keys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,"`
}

func (x *Keys) Reset() {
	*x = Keys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_group_v1_group_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keys) ProtoMessage() {}

func (x *Keys) ProtoReflect() protoreflect.Message {
	mi := &file_api_group_v1_group_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keys.ProtoReflect.Descriptor instead.
func (*Keys) Descriptor() ([]byte, []int) {
	return file_api_group_v1_group_proto_rawDescGZIP(), []int{20}
}

func (x *Keys) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_api_group_v1_group_proto protoreflect.FileDescriptor

var file_api_group_v1_group_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x5b, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb,
	0x84, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x83,
	0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb,
	0x84, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x32, 0x15, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe8, 0xae,
	0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x22, 0x52, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x73, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32,
	0x12, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0x49, 0x44, 0x20, 0xe6, 0x95, 0xb0,
	0xe7, 0xbb, 0x84, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0xe8, 0xae,
	0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5e, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0f, 0x6c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x60, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0f,
	0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x75, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb,
	0x84, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x03, 0x6b, 0x76, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x13, 0x92, 0x41,
	0x10, 0x32, 0x0e, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x6b,
	0x76, 0x52, 0x03, 0x6b, 0x76, 0x73, 0x22, 0x78, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0d,
	0x32, 0x0b, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0x49, 0x44, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3d, 0x0a, 0x03, 0x6b, 0x76, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32, 0x0e, 0xe6, 0x89, 0xa9,
	0xe5, 0xb1, 0x95, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x6b, 0x76, 0x52, 0x03, 0x6b, 0x76, 0x73,
	0x22, 0x7b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x1b, 0x92, 0x41, 0x18, 0x32, 0x16, 0xe6,
	0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x6b, 0x65, 0x79, 0x20, 0xe6,
	0x95, 0xb0, 0xe7, 0xbb, 0x84, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x20, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0xe8, 0xae,
	0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb7, 0x01,
	0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42,
	0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0xe4,
	0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x59, 0x0a, 0x08,
	0x73, 0x79, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x79, 0x73, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x32, 0x15, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb,
	0x84, 0xe7, 0xb3, 0xbb, 0xe7, 0xbb, 0x9f, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x08, 0x73,
	0x79, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x65, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e,
	0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x14, 0x92, 0x41, 0x11,
	0x32, 0x0f, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0xe4, 0xbf, 0xa1, 0xe6, 0x81,
	0xaf, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x65,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7,
	0xbb, 0x84, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x62, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe8, 0xae, 0xbe,
	0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x0b, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x72, 0x65, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x17, 0x92, 0x41,
	0x14, 0x32, 0x12, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0xe5, 0x88, 0x97, 0xe8,
	0xa1, 0xa8, 0xe6, 0xa0, 0x91, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x72, 0x65, 0x65,
	0x22, 0x9f, 0x02, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x28, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0x92, 0x41, 0x11, 0x32, 0x0f, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0xe5, 0x90,
	0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0xe8,
	0xaf, 0xb4, 0xe6, 0x98, 0x8e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32, 0x0e, 0xe7, 0x88, 0xb6, 0xe8, 0xae,
	0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0x49, 0x44, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe7, 0x88,
	0xb6, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x32, 0x15, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb,
	0x84, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0x52, 0x03, 0x65,
	0x78, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x53, 0x75, 0x62, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73, 0x12, 0x70,
	0x0a, 0x0b, 0x73, 0x75, 0x62, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x75,
	0x62, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x16, 0x92, 0x41, 0x13,
	0x32, 0x11, 0xe5, 0xad, 0x90, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0x49, 0x44, 0xe5, 0x88, 0x97,
	0xe8, 0xa1, 0xa8, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x1a, 0x3e, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xb1, 0x02, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x53, 0x79, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0xe8, 0xae, 0xbe, 0xe5,
	0xa4, 0x87, 0xe7, 0xbb, 0x84, 0x49, 0x44, 0x52, 0x02, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x1a, 0x92, 0x41, 0x17, 0x32, 0x15, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0xe5,
	0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x32,
	0x15, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xbb, 0x84, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0,
	0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x26, 0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0f, 0x92, 0x41, 0x0c, 0x32, 0x0a, 0x20, 0xe6, 0x89, 0x80, 0xe6, 0x9c, 0x89, 0xe8,
	0x80, 0x85, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x07, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32,
	0x06, 0xe6, 0x9d, 0xa5, 0xe6, 0xba, 0x90, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x33, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe7, 0xa9, 0xba, 0xe9, 0x97, 0xb4,
	0xe6, 0xa0, 0x91, 0xe8, 0xb7, 0xaf, 0xe5, 0xbe, 0x84, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x22, 0xf9, 0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32,
	0x12, 0xe8, 0xae, 0xb0, 0xe5, 0xbd, 0x95, 0xe5, 0xbc, 0x80, 0xe5, 0xa7, 0x8b, 0xe4, 0xbd, 0x8d,
	0xe7, 0xbd, 0xae, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x34, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe6, 0xaf, 0x8f, 0xe9, 0xa1, 0xb5, 0xe9, 0x99, 0x90, 0xe5,
	0x88, 0xb6, 0xe6, 0x9d, 0xa1, 0xe6, 0x95, 0xb0, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x8e, 0x92, 0xe5, 0xba,
	0x8f, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x59, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x34, 0x92, 0x41, 0x31, 0x32, 0x2f, 0xe6, 0x98,
	0xaf, 0xe5, 0x90, 0xa6, 0xe9, 0x80, 0x86, 0xe5, 0xba, 0x8f, 0xef, 0xbc, 0x8c, 0x20, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0xef, 0xbc, 0x9a, 0xe4, 0xb8, 0x8d, 0xe9, 0x80, 0x86, 0xe5, 0xba, 0x8f, 0xef,
	0xbc, 0x8c, 0x74, 0x72, 0x75, 0x65, 0x3a, 0xe9, 0x80, 0x86, 0xe5, 0xba, 0x8f, 0x52, 0x0c, 0x69,
	0x73, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32,
	0x0e, 0x65, 0x73, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe6, 0x9d, 0xa1, 0xe4, 0xbb, 0xb6, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe7, 0xbb, 0x84, 0xe5, 0x90, 0x88, 0xe6,
	0x9d, 0xa1, 0xe4, 0xbb, 0xb6, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xf0, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x92,
	0x41, 0x14, 0x32, 0x12, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe8, 0xbe, 0x93, 0xe5, 0x87, 0xba,
	0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x92, 0x41,
	0x05, 0x32, 0x03, 0xe5, 0x80, 0xbc, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x93, 0x01,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x77, 0x92, 0x41, 0x74, 0x32, 0x72, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe7, 0xac, 0xa6,
	0x2c, 0x20, 0x24, 0x65, 0x71, 0xe4, 0xb8, 0xba, 0xe7, 0x9b, 0xb8, 0xe7, 0xad, 0x89, 0xef, 0xbc,
	0x8c, 0x24, 0x6e, 0x65, 0x71, 0xe4, 0xb8, 0xba, 0xe4, 0xb8, 0x8d, 0xe7, 0xad, 0x89, 0xef, 0xbc,
	0x8c, 0x24, 0x6c, 0x74, 0xe4, 0xb8, 0xba, 0xe5, 0xb0, 0x8f, 0xe4, 0xba, 0x8e, 0xef, 0xbc, 0x8c,
	0x24, 0x67, 0x74, 0xe4, 0xb8, 0xba, 0xe5, 0xa4, 0xa7, 0xe4, 0xba, 0x8e, 0xef, 0xbc, 0x8c, 0x24,
	0x6c, 0x6e, 0x65, 0xe4, 0xb8, 0xba, 0xe5, 0xb0, 0x8f, 0xe4, 0xba, 0x8e, 0xe7, 0xad, 0x89, 0xe4,
	0xba, 0x8e, 0xef, 0xbc, 0x8c, 0x20, 0x24, 0x67, 0x6e, 0x65, 0xe4, 0xb8, 0xba, 0xe5, 0xa4, 0xa7,
	0xe4, 0xba, 0x8e, 0xe7, 0xad, 0x89, 0xe4, 0xba, 0x8e, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x22, 0x27, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x69, 0x64,
	0x20, 0xe6, 0x95, 0xb0, 0xe7, 0xbb, 0x84, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2b, 0x0a, 0x04,
	0x4b, 0x65, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x0f, 0x92, 0x41, 0x0c, 0x32, 0x0a, 0x6b, 0x65, 0x79, 0x20, 0xe6, 0x95, 0xb0,
	0xe7, 0xbb, 0x84, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x32, 0xc1, 0x0a, 0x0a, 0x05, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0xa3, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10,
	0x22, 0x07, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x3a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x92, 0x41, 0x36, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x13, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x0b, 0x0a, 0x03,
	0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xa8, 0x01, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x1a, 0x0c, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x92, 0x41, 0x36, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2a, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04,
	0x0a, 0x02, 0x4f, 0x4b, 0x12, 0x9d, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x54,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x0e, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x03, 0x69, 0x64, 0x73, 0x92, 0x41, 0x36, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04,
	0x0a, 0x02, 0x4f, 0x4b, 0x12, 0x92, 0x01, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x30, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x10, 0x67, 0x65, 0x74, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x0b, 0x0a, 0x03,
	0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xb1, 0x01, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x72, 0x65, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x5a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x0c, 0x2f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x3a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x92, 0x41, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x0e, 0x67, 0x65, 0x74, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x20, 0x74, 0x72,
	0x65, 0x65, 0x2a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x72, 0x65, 0x65,
	0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xa0, 0x01,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78, 0x74, 0x12, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x57, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22,
	0x10, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x78,
	0x74, 0x3a, 0x03, 0x6b, 0x76, 0x73, 0x92, 0x41, 0x37, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x14, 0x61, 0x64, 0x64, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x20, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x0b, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x45, 0x78, 0x74, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b,
	0x12, 0xac, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x45, 0x78, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x1a, 0x10, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x78, 0x74, 0x3a, 0x03, 0x6b, 0x76, 0x73, 0x92,
	0x41, 0x3d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x20, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45,
	0x78, 0x74, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12,
	0xab, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78, 0x74, 0x12,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x62, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x22, 0x17, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x65, 0x78, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x92, 0x41, 0x3a, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x20, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2a, 0x0b, 0x44, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78, 0x74,
	0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x42, 0x42, 0x0a,
	0x0c, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a,
	0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6b, 0x65, 0x65,
	0x6c, 0x2d, 0x69, 0x6f, 0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_group_v1_group_proto_rawDescOnce sync.Once
	file_api_group_v1_group_proto_rawDescData = file_api_group_v1_group_proto_rawDesc
)

func file_api_group_v1_group_proto_rawDescGZIP() []byte {
	file_api_group_v1_group_proto_rawDescOnce.Do(func() {
		file_api_group_v1_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_group_v1_group_proto_rawDescData)
	})
	return file_api_group_v1_group_proto_rawDescData
}

var file_api_group_v1_group_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_group_v1_group_proto_goTypes = []interface{}{
	(*CreateGroupRequest)(nil),      // 0: api.group.v1.CreateGroupRequest
	(*UpdateGroupRequest)(nil),      // 1: api.group.v1.UpdateGroupRequest
	(*DeleteGroupRequest)(nil),      // 2: api.group.v1.DeleteGroupRequest
	(*GetGroupRequest)(nil),         // 3: api.group.v1.GetGroupRequest
	(*GetGroupTreeRequest)(nil),     // 4: api.group.v1.GetGroupTreeRequest
	(*ListGroupItemsRequest)(nil),   // 5: api.group.v1.ListGroupItemsRequest
	(*AddGroupExtRequest)(nil),      // 6: api.group.v1.AddGroupExtRequest
	(*UpdateGroupExtRequest)(nil),   // 7: api.group.v1.UpdateGroupExtRequest
	(*DelGroupExtRequest)(nil),      // 8: api.group.v1.DelGroupExtRequest
	(*GroupEntityCoreInfo)(nil),     // 9: api.group.v1.GroupEntityCoreInfo
	(*CreateGroupResponse)(nil),     // 10: api.group.v1.CreateGroupResponse
	(*UpdateGroupResponse)(nil),     // 11: api.group.v1.UpdateGroupResponse
	(*GetGroupResponse)(nil),        // 12: api.group.v1.GetGroupResponse
	(*GetGroupTreeResponse)(nil),    // 13: api.group.v1.GetGroupTreeResponse
	(*GroupEntity)(nil),             // 14: api.group.v1.GroupEntity
	(*GroupEntitySubEntityIds)(nil), // 15: api.group.v1.GroupEntitySubEntityIds
	(*GroupEntitySysField)(nil),     // 16: api.group.v1.GroupEntitySysField
	(*ListEntityQuery)(nil),         // 17: api.group.v1.ListEntityQuery
	(*Condition)(nil),               // 18: api.group.v1.Condition
	(*Ids)(nil),                     // 19: api.group.v1.Ids
	(*Keys)(nil),                    // 20: api.group.v1.Keys
	nil,                             // 21: api.group.v1.GroupEntitySubEntityIds.SubEntityIdEntry
	(*structpb.Value)(nil),          // 22: google.protobuf.Value
	(*emptypb.Empty)(nil),           // 23: google.protobuf.Empty
}
var file_api_group_v1_group_proto_depIdxs = []int32{
	14, // 0: api.group.v1.CreateGroupRequest.group:type_name -> api.group.v1.GroupEntity
	14, // 1: api.group.v1.UpdateGroupRequest.group:type_name -> api.group.v1.GroupEntity
	19, // 2: api.group.v1.DeleteGroupRequest.ids:type_name -> api.group.v1.Ids
	17, // 3: api.group.v1.GetGroupTreeRequest.listEntityQuery:type_name -> api.group.v1.ListEntityQuery
	17, // 4: api.group.v1.ListGroupItemsRequest.listEntityQuery:type_name -> api.group.v1.ListEntityQuery
	22, // 5: api.group.v1.AddGroupExtRequest.kvs:type_name -> google.protobuf.Value
	22, // 6: api.group.v1.UpdateGroupExtRequest.kvs:type_name -> google.protobuf.Value
	20, // 7: api.group.v1.DelGroupExtRequest.keys:type_name -> api.group.v1.Keys
	14, // 8: api.group.v1.GroupEntityCoreInfo.group:type_name -> api.group.v1.GroupEntity
	16, // 9: api.group.v1.GroupEntityCoreInfo.sysField:type_name -> api.group.v1.GroupEntitySysField
	22, // 10: api.group.v1.CreateGroupResponse.groupObject:type_name -> google.protobuf.Value
	22, // 11: api.group.v1.UpdateGroupResponse.groupObject:type_name -> google.protobuf.Value
	22, // 12: api.group.v1.GetGroupResponse.groupObject:type_name -> google.protobuf.Value
	22, // 13: api.group.v1.GetGroupTreeResponse.GroupTree:type_name -> google.protobuf.Value
	22, // 14: api.group.v1.GroupEntity.ext:type_name -> google.protobuf.Value
	21, // 15: api.group.v1.GroupEntitySubEntityIds.subEntityId:type_name -> api.group.v1.GroupEntitySubEntityIds.SubEntityIdEntry
	18, // 16: api.group.v1.ListEntityQuery.condition:type_name -> api.group.v1.Condition
	0,  // 17: api.group.v1.Group.CreateGroup:input_type -> api.group.v1.CreateGroupRequest
	1,  // 18: api.group.v1.Group.UpdateGroup:input_type -> api.group.v1.UpdateGroupRequest
	2,  // 19: api.group.v1.Group.DeleteGroup:input_type -> api.group.v1.DeleteGroupRequest
	3,  // 20: api.group.v1.Group.GetGroup:input_type -> api.group.v1.GetGroupRequest
	4,  // 21: api.group.v1.Group.GetGroupTree:input_type -> api.group.v1.GetGroupTreeRequest
	6,  // 22: api.group.v1.Group.AddGroupExt:input_type -> api.group.v1.AddGroupExtRequest
	7,  // 23: api.group.v1.Group.UpdateGroupExt:input_type -> api.group.v1.UpdateGroupExtRequest
	8,  // 24: api.group.v1.Group.DelGroupExt:input_type -> api.group.v1.DelGroupExtRequest
	10, // 25: api.group.v1.Group.CreateGroup:output_type -> api.group.v1.CreateGroupResponse
	11, // 26: api.group.v1.Group.UpdateGroup:output_type -> api.group.v1.UpdateGroupResponse
	23, // 27: api.group.v1.Group.DeleteGroup:output_type -> google.protobuf.Empty
	12, // 28: api.group.v1.Group.GetGroup:output_type -> api.group.v1.GetGroupResponse
	13, // 29: api.group.v1.Group.GetGroupTree:output_type -> api.group.v1.GetGroupTreeResponse
	23, // 30: api.group.v1.Group.AddGroupExt:output_type -> google.protobuf.Empty
	23, // 31: api.group.v1.Group.UpdateGroupExt:output_type -> google.protobuf.Empty
	23, // 32: api.group.v1.Group.DelGroupExt:output_type -> google.protobuf.Empty
	25, // [25:33] is the sub-list for method output_type
	17, // [17:25] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_api_group_v1_group_proto_init() }
func file_api_group_v1_group_proto_init() {
	if File_api_group_v1_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_group_v1_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupExtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupExtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelGroupExtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupEntityCoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupEntitySubEntityIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupEntitySysField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEntityQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ids); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_group_v1_group_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_group_v1_group_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_group_v1_group_proto_goTypes,
		DependencyIndexes: file_api_group_v1_group_proto_depIdxs,
		MessageInfos:      file_api_group_v1_group_proto_msgTypes,
	}.Build()
	File_api_group_v1_group_proto = out.File
	file_api_group_v1_group_proto_rawDesc = nil
	file_api_group_v1_group_proto_goTypes = nil
	file_api_group_v1_group_proto_depIdxs = nil
}
